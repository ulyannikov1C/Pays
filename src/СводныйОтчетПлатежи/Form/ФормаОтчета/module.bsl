
Процедура ПолеВвода1ПриИзменении(Элемент)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
    ПараметрПериод = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаС"));
    
    ПараметрПериод.Значение = ПолеВвода1;
    ПараметрПериод.Использование = ЗначениеЗаполнено(ПолеВвода1)
КонецПроцедуры

Процедура ПолеВвода2ПриИзменении(Элемент)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
    ПараметрПериод = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаПо"));
    
    ПараметрПериод.Значение = ПолеВвода2;
    ПараметрПериод.Использование = ЗначениеЗаполнено(ПолеВвода2)

КонецПроцедуры

Процедура ДействияФормыНастройка(Кнопка)
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
    ФормаНастройки = ПолучитьФормуНастроек(); 
    Если ФормаНастройки.ОткрытьМодально() = Истина Тогда // Необходмо сформировать отчет 
 
        ОтобразитьНастройки();
    Иначе
        КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
    КонецЕсли;
    
КонецПроцедуры

Процедура ОтобразитьНастройки()
    
    Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
    ПараметрПериод = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаС"));
    
    Если ПараметрПериод.Использование Тогда
        ПолеВвода1 = ?(ТипЗнч(ПараметрПериод.Значение) = Тип("Дата"), ПараметрПериод.Значение, ПараметрПериод.Значение.Дата);
    Иначе
        ПолеВвода1 = Неопределено;
	КонецЕсли;
	
	оПараметрПериод = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаПо"));
    
    Если оПараметрПериод.Использование Тогда
        ПолеВвода2 = ?(ТипЗнч(ПараметрПериод.Значение) = Тип("Дата"), ПараметрПериод.Значение, ПараметрПериод.Значение.Дата);
    Иначе
        ПолеВвода2 = Неопределено;
	КонецЕсли;

    
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
		
КонецПроцедуры

Процедура ПриОткрытии()
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ПараметрПериод = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Пров1"));
	ПолеВвода3 = Справочники.Номенклатура.НайтиПоКоду("000001512");
	ПараметрПериод.Значение = ПолеВвода3;
	ПараметрПериод.Использование = ЗначениеЗаполнено(ПолеВвода3);
	
	
	
	//Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
	//	Если СокрЛП(ЭлементОтбора.ЛевоеЗначение) = "Провайдер" тогда
	//	ЭлементОтбора.ПравоеЗначение =  Справочники.Номенклатура.НайтиПоКоду("000001512");
	//	ЭлементОтбора.Использование = Истина; 
	//	Иначе
	//	ЭлементОтбора.ПравоеЗначение =  Справочники.Номенклатура.НайтиПоКоду("000001511");
	//	ЭлементОтбора.Использование = Истина;
	//	КонецЕсли;
	//КонецЦикла;
	//	 ЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	 ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Имя);
	//	 ЭлементОтбора.ВидСравнения = ВидСравнения;
	//	 ЭлементОтбора.ПравоеЗначение = Значение;
	//	 ЭлементОтбора.Использование = Истина; 
	//
	//Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	//ПараметрПериод = Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Пров2"));
	//ПолеВвода4 = Справочники.Номенклатура.НайтиПоКоду("000001512");

	//ПараметрПериод.Значение = ПолеВвода4;
	//ПараметрПериод.Использование = ЗначениеЗаполнено(ПолеВвода4);
	//

КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	//Очищаем поле табличного документа
	Результат = ЭлементыФормы.Результат;
	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	
	ПроцессорВывода.НачатьВывод();

	ТаблицаЗафиксирована = Ложь;
	Пока Истина Цикл
		ЭлементРезультата = ПроцессорКомпоновкиДанных.Следующий();
		Если ЭлементРезультата= Неопределено Тогда
			Прервать;
		Иначе
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
			Если Не ТаблицаЗафиксирована
				И ЭлементРезультата.ЗначенияПараметров.Количество() >  0 Тогда
				
				ТаблицаЗафиксирована = Истина;
				Результат.ФиксацияСверху = Результат.ВысотаТаблицы - 1;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
КонецПроцедуры


