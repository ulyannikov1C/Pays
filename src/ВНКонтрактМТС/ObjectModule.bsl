//[нач 14233 Ульянников 14.04.2016
Перем СтруктураМ Экспорт;
// 14233 Ульянников 14.04.2016 кон]


#Если Клиент Тогда 
Функция ПолучитьДатуПортации(item_code,iccid,operator_code)
	ДатаПортации = Формат(СсылкаНаОбъект.Дата+40*24*60*60,"ДЛФ=Д") +" "+Формат(СсылкаНаОбъект.Дата,"ДФ=ЧЧ:мм");

	РасширенныйКодОшибки = 1;
	AnswerXML = "";
	КодТочки = ВРег(СокрЛП(ПараметрыСеанса.ТекущийМагазин.Код));
	Попытка
		CyberPlat = ПолучитьСерверТО().ПолучитьВнешнююОбработку(Справочники.ВнешниеОбработки.CyberPlat);
	Исключение
		
	КонецПопытки;
	
	Если CyberPlat = Неопределено Тогда
		//ОписаниеОшибки = ("Не удалось получить обработку CyberPlat");
		//ОбщегоНазначения.ПредупреждениеОбОшибке(ОписаниеОшибки);
		Возврат ДатаПортации;
	КонецЕсли;
	
	Если Константы.ТестоваяБаза.Получить() Тогда
		СвойУрл = "http://msk-00-appdev01:8084/CheckPointWebService.asmx/ProcessXml";
	Иначе
		СвойУрл = Справочники.АдресаВебСервисов.CheckPointWebService.Адрес;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СвойУрл) Тогда
		Возврат ДатаПортации;
	КонецЕсли;
	
//<request>
//<process_name>SIM</process_name>
//<function>CALC_DATE_PORTING</function>
//<function_params>
//<subsite_code>P435</subsite_code> ----код склада
//<item_code>0101-2296</item_code> --- код товара
//<iccid>123456789123456787</iccid> ---сериный номер
//<operator_code>0000065</operator_code> ---- код оператора   Таб номер продавца
//</function_params>
//</request>

	XML="<?xml version=""1.0"" encoding=""utf-8"" ?>
	|<request>
	|<process_name>SIM</process_name>
	|<function>CALC_DATE_PORTING</function>
	|<function_params>
	|<subsite_code>"+КодТочки+"</subsite_code> 
	|<item_code>"+item_code+"</item_code>
	|<iccid>"+iccid+"</iccid>
	|<operator_code>"+operator_code+"</operator_code>
	|</function_params>
	|</request>";
	
	
	Рез = CyberPlat.глОтправитьПоHTTP(XML, AnswerXML, ,РасширенныйКодОшибки,,,,СвойУрл);	

	Если Рез<>0 Тогда
		Возврат ДатаПортации;
	КонецЕсли;
	
	ДеревоXML = "";
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXml.УстановитьСтроку(AnswerXML);
	
	Если Не CyberPlat.ПостроитьДеревоXML(ЧтениеXml, ДеревоXML) Тогда
		ОписаниеОшибки = ("При получении даты портации произошла ошибка. Не удалось разобрать ответ!");
		//ОбщегоНазначения.ПредупреждениеОбОшибке(ОписаниеОшибки);
		РТК_Добавленныепроцедуры.ЗаписыватьвЛог("Печать заявления на портацию 01" + " " + ОписаниеОшибки);		
		Возврат ДатаПортации;
	КонецЕсли;
	
	//Разбор ответа по переменным ---------------------------------------------------------------------------------------
	СтруктураОтвет = Новый Структура;
	
	Попытка  	СтруктураОтвет.Вставить("ОК", СокрЛП(НРег(ДеревоXML.response)));
	Исключение  СтруктураОтвет.Вставить("ОК", "");	
	КонецПопытки;
	
	Если Найти(НРег(СтруктураОтвет.Ок), "структура") > 0 Тогда 
		Попытка
			Отказ	= Число(ДеревоXML.response.is_error);
		Исключение
			Отказ = Истина;
		КонецПопытки;
		Если Отказ Тогда
			ОписаниеОшибки = ДеревоXML.response.message;
			//ОбщегоНазначения.ПредупреждениеОбОшибке(ОписаниеОшибки);
			РТК_Добавленныепроцедуры.ЗаписыватьвЛог("Печать заявления на портацию 02" + " " + ОписаниеОшибки);		
		Иначе
			Попытка
				ДатаПортации_ = Дата(СтрЗаменить(СокрЛП(ДеревоXML.response.Message),"-",""));
				ДатаПортации = Формат(ДатаПортации_,"ДЛФ=Д") +" "+Формат(СсылкаНаОбъект.Дата,"ДФ=ЧЧ:мм");
			Исключение
			КонецПопытки;
		КонецЕсли;
	Иначе
		ОписаниеОшибки = ("При получении даты портации произошла ошибка. Не удалось разобрать ответ! "+ДеревоXML.Error.Message);
		//ОбщегоНазначения.ПредупреждениеОбОшибке(ОписаниеОшибки);
		РТК_Добавленныепроцедуры.ЗаписыватьвЛог("Печать заявления на портацию 03" + " " + ОписаниеОшибки);		
	КонецЕсли;
	
	Возврат ДатаПортации;
КонецФункции 

	
//{РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_ 
Процедура НапечататьЗаявленияПортации(СтруктураДанныхПечати)
	ТабДокументЗаявление = Новый ТабличныйДокумент;
	ТабДокументЗаявление.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйКонтракт_ЗаявлениеНаПортацию_" + Строка(Новый УникальныйИдентификатор);
	Если СтруктураДанныхПечати.ЭтоФизЛицо Тогда
		Макет = ПолучитьМакет("ЗаявлениеНаПортациюB2C");
	иначе
		Макет = ПолучитьМакет("ЗаявлениеНаПортациюB2B");
	КонецЕсли;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПечати);
	СтруктураДополнительныхРеквизитов = СсылкаНаОбъект.ДополнительныеРеквизиты.Получить();
	Если СтруктураДополнительныхРеквизитов = Неопределено Тогда
		СтруктураДополнительныхРеквизитов = Новый Структура();
	КонецЕсли;
	ОбластьМакета.Параметры.Заполнить(СтруктураДополнительныхРеквизитов);
	
	стрICC = СокрЛП(СсылкаНаОбъект.ICC);
	ДатаПортации = Формат(СсылкаНаОбъект.Дата+40*24*60*60,"ДЛФ=Д") +" "+Формат(СсылкаНаОбъект.Дата,"ДФ=ЧЧ:мм");
	Попытка
		ДатаПортации = ПолучитьДатуПортации(СокрЛП(СсылкаНаОбъект.СимКарта.Артикул),стрICC,СокрЛП(СсылкаНаОбъект.Ответственный.ТабельныйНомер));
	Исключение
	КонецПопытки;
	Если СтрДлина(стрICC) = 18 Тогда
		стрICC = "8" + стрICC;
	КонецЕсли; 
	ОбластьМакета.Параметры.ICC	= стрICC;
	//ОбластьМакета.Параметры.КонтактныйТелефон = УправлениеКонтактнойИнформацией.ПолучитьТелефонИзКонтактнойИнформации(СсылкаНаОбъект.Контрагент);
	ОбластьМакета.Параметры.ПереносимыйНомерТелефона = СсылкаНаОбъект.НазначениеДоставки;
	Если СтруктураДанныхПечати.ЭтоФизЛицо Тогда
		ОбластьМакета.Параметры.ДокументДатаВыдачи = Формат(СтруктураДанныхПечати.ДокументДатаВыдачи, "ДФ=dd.MM.yyyy");
	Иначе
		ОбластьМакета.Параметры.МТСДоверенноеЛицо = СсылкаНаОбъект.МТСДоверенноеЛицо;
	КонецЕсли;
	ТабДокументЗаявление.Вывести(ОбластьМакета);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заявление");
	ОбластьМакета.Параметры.ПереносимыйНомерТелефона = СсылкаНаОбъект.НазначениеДоставки;
	Если НЕ СтруктураДанныхПечати.ЭтоФизЛицо Тогда
		ОбластьМакета.Параметры.НазваниеОрганизации = СтруктураДанныхПечати.НазваниеОрганизации;
	КонецЕсли;
	ОбластьМакета.Параметры.ДатаПортации = ДатаПортации;
	ТабДокументЗаявление.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Дата 				= Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Ответственный 		= СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.КодОП 		= СтруктураДанныхПечати.МагазинКод;
	ТабДокументЗаявление.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Приложение1");
	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПечати);
	стрICC = СокрЛП(СсылкаНаОбъект.ICC);
	Если СтрДлина(стрICC) = 18 Тогда
		стрICC = "8" + стрICC;
	КонецЕсли; 
	ОбластьМакета.Параметры.ICC	= стрICC;
	ОбластьМакета.Параметры.ПереносимыйНомерТелефона = СсылкаНаОбъект.НазначениеДоставки;
	ТабДокументЗаявление.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Дата 				= Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Ответственный 		= СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.КодОП 		= СтруктураДанныхПечати.МагазинКод;
	ТабДокументЗаявление.Вывести(ОбластьМакета);
	
	ТабДокументЗаявление.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокументЗаявление.АвтоМасштаб = Ложь;
	ТабДокументЗаявление.МасштабПечати = 100;  
	ТабДокументЗаявление.ИмяПринтера = "_&_";
	
	ТабДокументЗаявление.ПолеСлева = 20;
	ТабДокументЗаявление.ПолеСправа = 20;
	ТабДокументЗаявление.ПолеСверху = 10;
	ТабДокументЗаявление.ПолеСнизу = 10;
	ТабДокументЗаявление.КоличествоЭкземпляров = 2;
	//ТабДокументЗаявление.Показать();
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокументЗаявление,ТабДокументЗаявление.КоличествоЭкземпляров);
	
КонецПроцедуры
//РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_}
	
Процедура НапечататьПравила(Склад)
	//KuleAl 20.06.2011 { *** подключаем OpenOffice 0009676
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//			|	ЗначенияСвойствОбъектов.Значение,
	//			|	ПравилаМТС.ФайлПравил
	//			|ИЗ
	//			|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаМТС КАК ПравилаМТС
	//			|		ПО ЗначенияСвойствОбъектов.Значение = ПравилаМТС.Объект
	//			|ГДЕ
	//			|	ЗначенияСвойствОбъектов.Свойство = &Свойство
	//			|	И ЗначенияСвойствОбъектов.Объект ССЫЛКА Справочник.Склады
	//			|	И ЗначенияСвойствОбъектов.Объект = &Объект";
	//Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Кластер Kontr",Истина));
	//Запрос.УстановитьПараметр("Объект", Склад);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Выборка.Следующий();
	//Объект = Выборка.ФайлПравил.ПолучитьОбъект();
	//
	//Форма = Объект.ПолучитьФорму();
	//Если Не ПроверитьДанныеХранилища(Истина,Объект.Хранилище) Тогда
	//	Возврат;
	//КонецЕсли;

	//Данные = Объект.Хранилище.Получить();
	//Если ТипЗнч(Данные) = Тип("Картинка") Тогда
	//	РаботаСФайлами.ОткрытьФормуИзображения(Форма, Выборка.ФайлПравил, Неопределено);
	//ИначеЕсли ТипЗнч(Данные) = Тип("ДвоичныеДанные") Тогда
	//	Если ПустаяСтрока(Объект.ИмяФайла) Тогда
	//		Предупреждение("Просьба заполнить имя и расширение файла");
	//		Возврат;
	//	КонецЕсли;
	//	//ТекущийЭлемент = ЭлементыФормы.Наименование;
	//	РаботаСФайлами.ОткрытьФайлы(Форма.ЭлементыФормы.Наименование, ПолучитьСсылкуНаФайл(Объект.ИмяФайла,Объект.Хранилище), Ложь);
	//Иначе
	//	Предупреждение("Не верный тип данных: " + ТипЗнч(Данные));
	//КонецЕсли;	
	//
	//*************************************************************
	
	// {РТК_8252_29.03.2012 11:26:43_Седых_
	// Было:
	//СсылкаНаОбъект.ПолучитьОбъект().Печать("ПравилаПостпейд");
	// Стало:
	КонтрактОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	КонтрактОбъект.Печать("ПравилаПостпейд");
	
	Попытка
		//установка статуса "Напечатана РФА"
		Если КонтрактОбъект.СтатусАктивация.Пустая() Тогда
			КонтрактОбъект.СтатусАктивация = Перечисления.СтатусыКонтрактовАктивация.НапечатанаРФА;
			// {РТК_1181_24.05.2012 14:44:23_Гордиенко_
			КонтрактОбъект.ДополнительныеСвойства.Вставить("НеВыполнятьКонтрольЕжедневногоОтчета", Истина);
			КонтрактОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования", Истина);
			КонтрактОбъект.ДополнительныеСвойства.Вставить("НеПроверятьЗакрытиеСмены", Истина);
			// РТК_1181_24.05.2012 14:44:23_Гордиенко_}
			КонтрактОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли; 
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не получилось установить статус ""Напечатана РФА"" для контракта """ 
									    + Строка(КонтрактОбъект) + """ по причине: " + ОписаниеОшибки());	
	КонецПопытки; 
	// РТК_8252_29.03.2012 11:26:43_Седых_} 
	
	//KuleAl 20.06.2011 }
	
КонецПроцедуры

Функция ПроверитьДанныеХранилища(Предупреждать,Хранилище)
	Если Хранилище.Получить() <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Предупреждать Тогда
		Предупреждение("Хранилище пусто!");
	КонецЕсли;
	Возврат Ложь;
КонецФункции // ПроверитьДанныеХранилища()

Функция ПолучитьСсылкуНаФайл(ИмяФайла,Хранилище)
	СсылкаФайл = Новый Структура;
	СсылкаФайл.Вставить("ИмяФайла",  ИмяФайла);
	СсылкаФайл.Вставить("Хранилище", Хранилище);
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(СсылкаФайл);

	Возврат МассивСсылок;
КонецФункции // ПолучитьСсылкуНаФайл()

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",",
    Знач ПропускатьПустыеСтроки = Неопределено)
 
    Результат = Новый Массив;
 
    // для обеспечения обратной совместимости
    Если ПропускатьПустыеСтроки = Неопределено Тогда
        ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
        Если ПустаяСтрока(Строка) Тогда 
            Если Разделитель = " " Тогда
                Результат.Добавить("");
            КонецЕсли;
            Возврат Результат;
        КонецЕсли;
    КонецЕсли;
    //
 
    Позиция = Найти(Строка, Разделитель);
    Пока Позиция > 0 Цикл
        Подстрока = Лев(Строка, Позиция - 1);
        Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
            Результат.Добавить(Подстрока);
        КонецЕсли;
        Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
        Позиция = Найти(Строка, Разделитель);
    КонецЦикла;
 
    Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
        Результат.Добавить(Строка);
    КонецЕсли;
 
    Возврат Результат;
 
КонецФункции

//мтт_Ульянников

Функция РазобратьДатуUnix(Дата_) Экспорт	
	Если стрДлина(Дата_) = 13 Тогда	
		Возврат	МестноеВремя('19700101' + Лев(Дата_,10));
	ИначеЕсли стрДлина (Дата_) = 12 тогда
		Возврат	МестноеВремя('19700101' + Лев(Дата_,9));
	КонецЕсли;	
КонецФункции	


//ттт_Ульянников

Функция РазборФИО(Сотрудник)
	СтруктураФИО = Новый Структура;
	ФИО = РазложитьСтрокуВМассивПодстрок(Сотрудник," ");
	Фамилия = ""; Имя = ""; Отчество = "";
	Если ФИО.Количество() > 0 Тогда
		Фамилия = Строка(ФИО.Получить(0));
		Если ФИО.Количество() > 1 Тогда
			Имя		= Строка(ФИО.Получить(1));
			Если ФИО.Количество() > 2 Тогда 
				// а вот отчество бывает и не из одного слова				
				Для Сч = 2 По ФИО.Количество()-1 Цикл
					Отчество = Отчество + Строка(ФИО.Получить(Сч)) + " ";
				КонецЦикла;
				Если ЗначениеЗаполнено(Отчество) Тогда  
					Отчество = Лев(Отчество,СтрДлина(Отчество)-1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	СтруктураФИО.Вставить("Фамилия", Фамилия);
	СтруктураФИО.Вставить("Имя", ?(ЗначениеЗаполнено(Имя),Имя,"")); 
	СтруктураФИО.Вставить("Отчество",?(ЗначениеЗаполнено(Отчество),Отчество,"")); 
	
	
Возврат СтруктураФИО;
КонецФункции



//ттт_Ульянников

Функция РазложитьАдрес(Знач СтрокаАдрес, ОП=Ложь) Экспорт
	
	//{МТТ+Телетай_19.02.2016 17:34:47_Суслова
	Страна = "";
	Индекс = "";
	Регион = "";
	Район = "";
	Город = "";
	НаселенныйПункт = "";
	ВнутригородскойРайон="";
	Улица ="";
	ДопТерритория="";
	Дом ="";
	Владение = "";
	Корпус ="";
	Строение = "";
	Квартира ="";
	
	МассивАдрес    =    РазложитьСтрокуВМассивПодстрок(СтрокаАдрес);
	
	Если ОП Тогда
		МассивСоответсвий=Новый Массив;
		МассивСоответсвий.Добавить(Индекс);
		МассивСоответсвий.Добавить(Регион);
		МассивСоответсвий.Добавить(Город);
		МассивСоответсвий.Добавить(Улица); 
		МассивСоответсвий.Добавить(Дом);
		
		сч=0;
		Для Каждого Эл Из МассивАдрес Цикл
			
			 МассивСоответсвий[сч]=Эл;
			 сч=сч+1;
			
		КонецЦикла;	
	
		Индекс = МассивСоответсвий[0];
		Регион = МассивСоответсвий[1];
		//Район  = МассивСоответсвий[2];
		Город  = МассивСоответсвий[2];
		//НаселенныйПункт = МассивСоответсвий[3];
		Улица  = МассивСоответсвий[3]; 
		Дом    = МассивСоответсвий[4];

		//
		//Если МассивАдрес.Количество() = 5 тогда
		//	Индекс = МассивАдрес[0];
		//	Регион = МассивАдрес[1];
		//	//Район  = МассивАдрес[2];
		//	Город  = МассивАдрес[2];
		//	//НаселенныйПункт = МассивАдрес[3];
		//	Улица  = МассивАдрес[3]; 
		//	Дом    = МассивАдрес[4];
		//	//Корпус = МассивАдрес[4];
	Иначе	
		//{индекс},{регион},{район},{город},{населенный пункт},{внутригородской район},{улица},{доп.территория},{дом},{владение},{корпус},{строение},{квартира}
		//Страна = МассивАдрес[0];
		Попытка
			
			Индекс = МассивАдрес[0];
			Регион = МассивАдрес[1];
			Район  = МассивАдрес[2];
			Город  = МассивАдрес[3];
			НаселенныйПункт = МассивАдрес[4];
			ВнутригородскойРайон=МассивАдрес[5];
			Улица  = МассивАдрес[6]; 
			ДопТерритория=МассивАдрес[7];
			Дом    = МассивАдрес[8];
			Владение    = МассивАдрес[9];
			Корпус = ?(ЗначениеЗаполнено(МассивАдрес[10]),МассивАдрес[10],МассивАдрес[11]);
			Строение  =  ?(ЗначениеЗаполнено(МассивАдрес[11]),МассивАдрес[11],МассивАдрес[10]);
			Квартира  = МассивАдрес[12];
			
		Исключение
			
			ЭлементовВМассиве = МассивАдрес.Количество();
			
			Если ЭлементовВМассиве = 10 Тогда
				
				Индекс = МассивАдрес[0];
				Регион = МассивАдрес[1];
				Район  = МассивАдрес[2];
				Город  = МассивАдрес[3];
				НаселенныйПункт = МассивАдрес[4];
				Улица  = МассивАдрес[5]; 
				Дом    = МассивАдрес[6];
				Корпус = МассивАдрес[7];
				Строение  = МассивАдрес[8];
				Квартира  = МассивАдрес[9];
			ИначеЕсли ЭлементовВМассиве = 11 Тогда
				Страна = МассивАдрес[0];
				Индекс = МассивАдрес[1];
				Регион = МассивАдрес[2];
				Район  = МассивАдрес[3];
				Город  = МассивАдрес[4];
				НаселенныйПункт = МассивАдрес[5];
				Улица  = МассивАдрес[6]; 
				Дом    = МассивАдрес[7];
				Корпус = МассивАдрес[8];
				Строение  = МассивАдрес[9];
				Квартира  = МассивАдрес[10];
				
			ИначеЕсли ЭлементовВМассиве = 9 Тогда
				Индекс = МассивАдрес[0];
				Регион = МассивАдрес[1];
				Район  = МассивАдрес[2];
				Город  = МассивАдрес[3];
				НаселенныйПункт = МассивАдрес[3];
				Улица  = МассивАдрес[4]; 
				Дом    = МассивАдрес[5];
				Корпус = МассивАдрес[6];
				Строение  = МассивАдрес[7];
				Квартира  = МассивАдрес[8];
				
				
			ИначеЕсли ЭлементовВМассиве = 8 Тогда	
				Индекс = МассивАдрес[0];
				Регион = МассивАдрес[1];
				Район  = МассивАдрес[2];
				Город  = МассивАдрес[2];
				//НаселенныйПункт = МассивАдрес[4];
				Улица  = МассивАдрес[3]; 
				Дом    = МассивАдрес[4];
				Корпус = МассивАдрес[5];
				Строение  = МассивАдрес[6];
				Квартира  = МассивАдрес[7];
				
			ИначеЕсли ЭлементовВМассиве = 7 тогда
				Индекс = МассивАдрес[0];
				Регион = МассивАдрес[1];
				Район  = МассивАдрес[2];
				Город  = МассивАдрес[3];
				//НаселенныйПункт = МассивАдрес[4];
				Улица  = МассивАдрес[4]; 
				Дом    = МассивАдрес[5];
				//Корпус = МассивАдрес[7];
				//Строение  = МассивАдрес[8];
				Квартира  = МассивАдрес[6];
			ИначеЕсли ЭлементовВМассиве = 6 тогда
				Индекс = МассивАдрес[0];
				Регион = МассивАдрес[1];
				Район  = МассивАдрес[2];
				Город  = МассивАдрес[3];
				//НаселенныйПункт = МассивАдрес[4];
				Улица  = МассивАдрес[4]; 
				Дом    = МассивАдрес[5];
				
				Если Найти(Район,"р-н") = 0 тогда
					Индекс = МассивАдрес[0];
					Регион = МассивАдрес[1];
					Город  = МассивАдрес[1];
					Улица  = МассивАдрес[3];
					//НаселенныйПункт = МассивАдрес[4];
					Дом  = МассивАдрес[4]; 
					Если Найти(МассивАдрес[5],"стр.")>0 ИЛИ Найти(МассивАдрес[5],"строен.")>0 тогда
						Строение    = МассивАдрес[5];
					ИначеЕсли Найти(МассивАдрес[5],"корп.")>0 тогда
						Корпус    = МассивАдрес[5];
						
					ИначеЕсли Найти(МассивАдрес[5],"кв")>0 тогда	
						Квартира    = МассивАдрес[5];
						
					КонецЕсли;	
				КонецЕсли;
			ИначеЕсли ЭлементовВМассиве = 5 тогда
				Индекс = МассивАдрес[0];
				Регион = МассивАдрес[1];
				//Район  = МассивАдрес[2];
				Город  = МассивАдрес[1];
				//НаселенныйПункт = МассивАдрес[3];
				Улица  = МассивАдрес[2]; 
				Дом    = МассивАдрес[3];
				Корпус = МассивАдрес[4];
			КонецЕсли;
			
		КонецПопытки;

	КонецЕсли;	
	//МТТ+Телетай_19.02.2016 17:34:47_Суслова}
		
	////Страна = "";
	////Индекс = "";
	////Регион = "";
	////Район = "";
	////Город = "";
	////НаселенныйПункт = "";
	////Улица ="";
	////Дом ="";
	////Корпус ="";
	////Строение = "";
	////Квартира ="";
	////
	////
	////МассивАдрес    =    РазложитьСтрокуВМассивПодстрок(СтрокаАдрес);
	////ЭлементовВМассиве = МассивАдрес.Количество();  
	////Если ЭлементовВМассиве = 11 Тогда
	////	
	////	
	////ИначеЕсли ЭлементовВМассиве = 10 Тогда
	////	
	////	Индекс = МассивАдрес[0];
	////	Регион = МассивАдрес[1];
	////	Район  = МассивАдрес[2];
	////	Город  = МассивАдрес[3];
	////	НаселенныйПункт = МассивАдрес[4];
	////	Улица  = МассивАдрес[5]; 
	////	Дом    = МассивАдрес[6];
	////	Корпус = МассивАдрес[7];
	////	Строение  = МассивАдрес[8];
	////	Квартира  = МассивАдрес[9];
	////ИначеЕсли ЭлементовВМассиве = 11 Тогда
	////	Страна = МассивАдрес[0];
	////	Индекс = МассивАдрес[1];
	////	Регион = МассивАдрес[2];
	////	Район  = МассивАдрес[3];
	////	Город  = МассивАдрес[4];
	////	НаселенныйПункт = МассивАдрес[5];
	////	Улица  = МассивАдрес[6]; 
	////	Дом    = МассивАдрес[7];
	////	Корпус = МассивАдрес[8];
	////	Строение  = МассивАдрес[9];
	////	Квартира  = МассивАдрес[10];
	////	
	////ИначеЕсли ЭлементовВМассиве = 9 Тогда
	////	Индекс = МассивАдрес[0];
	////	Регион = МассивАдрес[1];
	////	Район  = МассивАдрес[2];
	////	Город  = МассивАдрес[3];
	////	НаселенныйПункт = МассивАдрес[3];
	////	Улица  = МассивАдрес[4]; 
	////	Дом    = МассивАдрес[5];
	////	Корпус = МассивАдрес[6];
	////	Строение  = МассивАдрес[7];
	////	Квартира  = МассивАдрес[8];
	////	
	////	
	////ИначеЕсли ЭлементовВМассиве = 8 Тогда	
	////	Индекс = МассивАдрес[0];
	////	Регион = МассивАдрес[1];
	////	Район  = МассивАдрес[2];
	////	Город  = МассивАдрес[2];
	////	//НаселенныйПункт = МассивАдрес[4];
	////	Улица  = МассивАдрес[3]; 
	////	Дом    = МассивАдрес[4];
	////	Корпус = МассивАдрес[5];
	////	Строение  = МассивАдрес[6];
	////	Квартира  = МассивАдрес[7];
	////	
	////ИначеЕсли ЭлементовВМассиве = 7 тогда
	////	Индекс = МассивАдрес[0];
	////	Регион = МассивАдрес[1];
	////	Район  = МассивАдрес[2];
	////	Город  = МассивАдрес[3];
	////	//НаселенныйПункт = МассивАдрес[4];
	////	Улица  = МассивАдрес[4]; 
	////	Дом    = МассивАдрес[5];
	////	//Корпус = МассивАдрес[7];
	////	//Строение  = МассивАдрес[8];
	////	Квартира  = МассивАдрес[6];
	////ИначеЕсли ЭлементовВМассиве = 6 тогда
	////	Индекс = МассивАдрес[0];
	////	Регион = МассивАдрес[1];
	////	Район  = МассивАдрес[2];
	////	Город  = МассивАдрес[3];
	////	//НаселенныйПункт = МассивАдрес[4];
	////	Улица  = МассивАдрес[4]; 
	////	Дом    = МассивАдрес[5];
	////	
	////	Если Найти(Район,"р-н") = 0 тогда
	////		Индекс = МассивАдрес[0];
	////		Регион = МассивАдрес[1];
	////		Город  = МассивАдрес[1];
	////		Улица  = МассивАдрес[3];
	////		//НаселенныйПункт = МассивАдрес[4];
	////		Дом  = МассивАдрес[4]; 
	////		Если Найти(МассивАдрес[5],"стр.")>0 ИЛИ Найти(МассивАдрес[5],"строен.")>0 тогда
	////			Строение    = МассивАдрес[5];
	////		ИначеЕсли Найти(МассивАдрес[5],"корп.")>0 тогда
	////			Корпус    = МассивАдрес[5];
	////			
	////		ИначеЕсли Найти(МассивАдрес[5],"кв")>0 тогда	
	////			Квартира    = МассивАдрес[5];
	////			
	////		КонецЕсли;	
	////	КонецЕсли;
	////ИначеЕсли ЭлементовВМассиве = 5 тогда
	////	Индекс = МассивАдрес[0];
	////	Регион = МассивАдрес[1];
	////	//Район  = МассивАдрес[2];
	////	Город  = МассивАдрес[1];
	////	//НаселенныйПункт = МассивАдрес[3];
	////	Улица  = МассивАдрес[2]; 
	////	Дом    = МассивАдрес[3];
	////	Корпус = МассивАдрес[4];
	////КонецЕсли;
	
	//Расширенное представление
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Страна",Страна);
	СтруктураВозврата.Вставить("Индекс",Индекс);
	СтруктураВозврата.Вставить("Регион",Регион);
	СтруктураВозврата.Вставить("Район",Район);
	СтруктураВозврата.Вставить("Город",Город);
	СтруктураВозврата.Вставить("НаселенныйПункт",НаселенныйПункт);
	СтруктураВозврата.Вставить("Улица",Улица);
	СтруктураВозврата.Вставить("Дом",Дом);
	СтруктураВозврата.Вставить("Корпус",Корпус);
	СтруктураВозврата.Вставить("Строение",Строение);
	СтруктураВозврата.Вставить("Квартира",Квартира);
	СтруктураВозврата.Вставить("ДопТерритория",ДопТерритория);
	
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ДатаПрописью(ДП) Экспорт
	стрРез = "";
	Д=Формат(ДП,"ДЛФ=D");
	спсМес = Новый СписокЗначений;
	спсМес.Добавить("января");
	спсМес.Добавить("февраля");
	спсМес.Добавить("марта");
	спсМес.Добавить("апреля");
	спсМес.Добавить("мая");
	спсМес.Добавить("июня");
	спсМес.Добавить("июля");
	спсМес.Добавить("августа");
	спсМес.Добавить("сентября");
	спсМес.Добавить("октября");
	спсМес.Добавить("ноября");
	спсМес.Добавить("декабря");
	
	спсЧисл = Новый СписокЗначений;
	спсЧисл.Добавить("первое","первого");
	спсЧисл.Добавить("второе","второго");
	спсЧисл.Добавить("третье","третьего");
	спсЧисл.Добавить("четвертое","четвертого");
	спсЧисл.Добавить("пятое","пятого");
	спсЧисл.Добавить("шестое","шестого");
	спсЧисл.Добавить("седьмое","седьмого");
	спсЧисл.Добавить("восьмое","восьмого");
	спсЧисл.Добавить("девятое","девятого");
	
	//числительные им.падеж
	спсЧислИм = Новый СписокЗначений;
	спсЧислИм.Добавить("тысяча","тысячного");
	спсЧислИм.Добавить("две тысячи","двухтысячного");
	спсЧислИм.Добавить("три тысячи","трехтысячного");
	спсЧислИм.Добавить("четыре тысячи","четырёхтысячного");
	спсЧислИм.Добавить("пять","пятитысячного");
	спсЧислИм.Добавить("шесть","шеститысячного");
	спсЧислИм.Добавить("семь","семитысячного");
	спсЧислИм.Добавить("восемь","восьмитысячного");
	спсЧислИм.Добавить("девять","девятитысячного");
	
	спсСотни = Новый СписокЗначений;
	спсСотни.Добавить("сто");
	спсСотни.Добавить("двести");
	спсСотни.Добавить("триста");
	спсСотни.Добавить("четыреста");
	спсСотни.Добавить("пятьсот");
	спсСотни.Добавить("шестьсот");
	спсСотни.Добавить("семьсот");
	спсСотни.Добавить("восемьсот");
	спсСотни.Добавить("девятьсот");
	
	//десятки им.падеж
	спсДесИм = Новый СписокЗначений;
	спсДесИм.Добавить("","десятого");
	спсДесИм.Добавить("двадцать","двадцатого");
	спсДесИм.Добавить("тридцать","тридцатого");
	спсДесИм.Добавить("сорок","сорокового");
	спсДесИм.Добавить("пятьдесят","пятидесятого");
	спсДесИм.Добавить("шестьдесят","шестидесятого");
	спсДесИм.Добавить("семьдесят","семидесятого");
	спсДесИм.Добавить("восемьдесят","восьмидесятого");
	спсДесИм.Добавить("девяносто","девяностого");
	
	//субдесятки род.падеж
	спсСубДесРод = Новый СписокЗначений;
	спсСубДесРод.Добавить("одиннадцатого");
	спсСубДесРод.Добавить("двенадцатого");
	спсСубДесРод.Добавить("тринадцатого");
	спсСубДесРод.Добавить("четырнадцатого");
	спсСубДесРод.Добавить("пятнадцатого");
	спсСубДесРод.Добавить("шестнадцатого");
	спсСубДесРод.Добавить("семнадцатого");
	спсСубДесРод.Добавить("восемнадцатого");
	спсСубДесРод.Добавить("девятнадцатого");
	
	спсДес = Новый СписокЗначений;
	спсДес.Добавить("десятое");
	спсДес.Добавить("двадцатое","двадцать");
	спсДес.Добавить("тридцатое","тридцать");
	спсДес.Добавить("сороковое","тридцать");
	спсДес.Добавить("пятидесятое","тридцать");
	спсДес.Добавить("шестидесятое","тридцать");
	спсДес.Добавить("семидесятое","тридцать");
	
	спсСубДес = Новый СписокЗначений;
	спсСубДес.Добавить("одиннадцатое");
	спсСубДес.Добавить("двенадцатое");
	спсСубДес.Добавить("тринадцатое");
	спсСубДес.Добавить("четырнадцатое");
	спсСубДес.Добавить("пятнадцатое");
	спсСубДес.Добавить("шестнадцатое");
	спсСубДес.Добавить("семнадцатое");
	спсСубДес.Добавить("восемнадцатое");
	спсСубДес.Добавить("девятнадцатое");
	
	спсДаты = СтрЗаменить(СокрЛП(Д),".",Символы.ПС);
	//разбираем день
	стрДень = СокрЛП(Число(СтрПолучитьСтроку(спсДаты,1)));
	Если СтрДлина(стрДень)=1 Тогда
		стрДень = спсЧисл.Получить(Число(стрДень)-1).Значение;
	Иначе
		десДень = Число(Лев(стрДень,1));
		едДень = Число(Прав(стрДень,1));
		
		Если едДень=0 Тогда
			стрДень = спсДес.Получить(десДень-1).Значение;
		Иначе
			Если десДень>1 Тогда
				т = Строка(спсДес.Получить(десДень-1));
				стрДень = т+" "+Строка(спсЧисл.Получить(едДень-1).Значение);
			Иначе
				стрДень = спсСубДес.Получить(едДень-1).Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//разбираем месяц
	стрМес = спсМес.Получить(Число(СтрПолучитьСтроку(спсДаты,2))-1).Значение;
	
	//разбираем год
	стрГод = СтрПолучитьСтроку(спсДаты,3);
	длинаГода = СтрДлина(стрГод);
	Если длинаГода=4 Тогда
		тыс = Сред(стрГод,1,1); сот = Сред(стрГод,2,1); дес = Сред(стрГод,3,1); ед = Сред(стрГод,4,1);
		_т = спсЧислИм.Получить(Число(тыс)-1).Значение;
		Если (Число(сот)=0) и (Число(дес)=0) и (Число(ед)=0) Тогда
			миллениум = Строка(спсЧислИм.Получить(Число(тыс)-1));
			стрГод = миллениум;
		Иначе
			с = ""; дс = ""; е = "";
			Если Число(сот)<>0 Тогда
				с = спсСотни.Получить(Число(сот)-1).Значение;
			КонецЕсли;
			Если Число(дес)<>0 Тогда
				Если Число(ед)=0 Тогда
					дг = Строка(спсДесИм.Получить(Число(дес)-1));
					дс = дг; 	
				Иначе
					дс = спсСубДесРод.Получить(Число(ед)-1).Значение;
				КонецЕсли;
			КонецЕсли;
			Если (Число(дес)>1) или (Число(дес)=0) Тогда
				Если Число(ед)<>0 Тогда
					е =Строка(спсЧисл.Получить(Число(ед)-1));
				КонецЕсли;
			КонецЕсли;
			стрГод = Строка(_т)+" "+Строка(с)+" "+Строка(дс)+" "+Строка(е);
		КонецЕсли;
	Иначе
		
	КонецЕсли;
	стрГод = стрГод+" года";
	стрГод = СтрЗаменить(стрГод,"  "," ");
	стрРез = Строка(стрДень)+" "+Строка(стрМес)+" "+Строка(стрГод);
	стрРез = СтрЗаменить(стрРез,"  "," ");
	Возврат стрРез;
КонецФункции  


//мтт_Ульянников

// { Феофанов Д.А._18.03.2016_[CQ#14084]
//
Функция ПривестиНомерТелефона(Знач НомерТелефона)
	
	нТел = СтрЗаменить(СокрЛП(НомерТелефона),"+8","");
	нТел = СтрЗаменить(нТел,")","");  
	нТел = СтрЗаменить(нТел,"(",""); 
	нТел = СтрЗаменить(нТел," ","");
	нТел = СтрЗаменить(нТел,"-",""); 
	нТел = СтрЗаменить(нТел,"+7","");
	
	Возврат НТел;
	
КонецФункции // ПривестиНомерТелефона() 
// } Феофанов Д.А._18.03.2016_[CQ#14084]

// { Феофанов Д.А._18.03.2016_[CQ#14084]
// Процедура заполняет параметр области переданным значением
//	 выделил в отдельную процедуру, т.к. каждое значение разделяется на символы
//   Параметры в макете определены как "ИмяПараметра" + "ПорядковыйНомерСимволаНачинаяС1", 
//	 Например "ДатаДоговора1", "ДатаДоговора2" и т.д.
//
// Параметры
//  Область  - ОбластьТабличногоДокумента - область с параметром
//  ИмяПараметра - Строка - имя параметра без числа
//	ЗначениеПараметра - Строка - значение параметра  
//
Процедура ЗаполнитьПараметрОбласти(Область, ИмяПараметра, ЗначениеПараметра, ПобуквенноеЗаполнение = Истина)
	
	Если ПобуквенноеЗаполнение Тогда
		// уберём из телефона все служебные символы
		Если СтрЧислоВхождений(Врег(ИмяПараметра), "ТЕЛЕФОН") > 0 Тогда
			ЗначениеПараметра = ПривестиНомерТелефона(ЗначениеПараметра);
		КонецЕсли;
		
		// дату приведём к формат "ддММгггг"
		Если СтрЧислоВхождений(Врег(ИмяПараметра), "ДАТА") > 0 Тогда
			ЗначениеПараметра = Формат(ЗначениеПараметра, "ДФ=""ддММгггг""");
		КонецЕсли;
		
		ЧислоСимволов = СтрДлина(ЗначениеПараметра);
		
		Для Сч = 1 По ЧислоСимволов Цикл
			ПорНомер = СтрЗаменить(Строка(Сч), Символы.НПП, "");
			// сделал в попытку, т.к. у параметров макета табличного документа нет метода
			// проверяющего на существование параметра (как, например, у структуры)
			Попытка
				Область.Параметры[ИмяПараметра + ПорНомер] = Сред(ЗначениеПараметра, Сч, 1);
			Исключение
			КонецПопытки;
		КонецЦикла;
	Иначе
		
		Область.Параметры[ИмяПараметра] = ЗначениеПараметра;
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьПараметрОбласти() 
// } Феофанов Д.А._18.03.2016_[CQ#14084]

// { Феофанов Д.А._16.03.2016_[CQ#14084]
// Формирование табличного документа контракта МГТС
//
// Возвращаемое значение:
//   ТабличныйДокумент   - контракт МГТС
//
Функция ПечатьКонтрактаМГТС()

	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Макет = ПолучитьМакет("МГТСДоговор");
	Область = Макет.ПолучитьОбласть("Договор");

	ЗаполнитьПараметрОбласти(Область, "ДатаДоговора", Формат(СсылкаНаОбъект.Дата, "ДФ=""ддММгггг"""));
	
	Ответственный = СсылкаНаОбъект.Ответственный;
	Должность = ?(ЗначениеЗаполнено(Ответственный), Ответственный.Должность.Наименование + " ", "");
	
	Область.Параметры.ДолжностьСотрудника 	= Должность;
	Область.Параметры.ФИОСотрудника			= Ответственный.Наименование;
		
	ДопРеквизиты = СсылкаНаОбъект.ДополнительныеРеквизиты.Получить();
	Если ТипЗнч(ДопРеквизиты) = Тип("Структура") И ЗначениеЗаполнено(ДопРеквизиты) Тогда
		
		Сопоставление = Новый Соответствие;
		Сопоставление.Вставить("ДопРеквизиты.Фамилия", 					"АбонентФамилия");
		Сопоставление.Вставить("ДопРеквизиты.Имя", 						"АбонентИмя");
		Сопоставление.Вставить("ДопРеквизиты.Отчество", 				"АбонентОтчество");
		Сопоставление.Вставить("ДопРеквизиты.ДокументСерия", 			"АбонентПаспортСерия");
		Сопоставление.Вставить("ДопРеквизиты.ДокументНомер", 			"АбонентПаспортНомер");
		Сопоставление.Вставить("ДопРеквизиты.ДокументДатаВыдачи", 		"АбонентПаспортДатаВыдачи");
		Сопоставление.Вставить("ДопРеквизиты.ДокументКемВыдан", 		"АбонентПаспортВыдан");
		Сопоставление.Вставить("ДопРеквизиты.ДатаРождения", 			"АбонентДатаРождения");
		Сопоставление.Вставить("ДопРеквизиты.КонтактныйТелефонФизЛица", "АбонентНомерТелефона");
		Сопоставление.Вставить("СсылкаНаОбъект.НомерТелефона", 			"АбонентскийНомерТелефона");
		
		Для каждого Эл Из Сопоставление Цикл
			
			ИмяПараметра = Эл.Значение;
			ЗначениеПараметра = "";
			Если Найти(Эл.Ключ, "ДопРеквизиты.") > 0 Тогда
				ИмяСвойства = СтрЗаменить(Эл.Ключ, "ДопРеквизиты.", "");
				Если ДопРеквизиты.Свойство(ИмяСвойства) Тогда
					ЗначениеПараметра = ДопРеквизиты[ИмяСвойства];
				КонецЕсли;
			ИначеЕсли Найти(Эл.Ключ, "СсылкаНаОбъект.") > 0 Тогда
				ЗначениеПараметра = СсылкаНаОбъект[СтрЗаменить(Эл.Ключ, "СсылкаНаОбъект.", "")];
			КонецЕсли;
				
			ЗаполнитьПараметрОбласти(Область, ИмяПараметра, ЗначениеПараметра);
					
		КонецЦикла;
		
		Если ДопРеквизиты.Свойство("МестоРождения") Тогда
			Область.Параметры.АбонентПаспортМестоРождения = ДопРеквизиты.МестоРождения;
		КонецЕсли;
		
		Если ДопРеквизиты.Свойство("Фамилия") Тогда
			ЗаполнитьПараметрОбласти(Область, "АбонентФамилия", ДопРеквизиты.Фамилия, Ложь);
		КонецЕсли;
		
		Если ДопРеквизиты.Свойство("Имя") Тогда
			ЗаполнитьПараметрОбласти(Область, "АбонентИмя", ДопРеквизиты.Имя, Ложь);
		КонецЕсли;
		
		Если ДопРеквизиты.Свойство("Отчество") Тогда
			ЗаполнитьПараметрОбласти(Область, "АбонентОтчество", ДопРеквизиты.Отчество, Ложь);
		КонецЕсли;
				
	КонецЕсли;
	
	ТабДокумент.Вывести(Область);
	
	// выводим теперь акт приёмки-сдачи
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	Макет = ПолучитьМакет("МГТСАктСдачиПриемки");
	Область = Макет.ПолучитьОбласть("Акт");
	ТабАкта = Новый ТабличныйДокумент;
	
	ЗаполнитьПараметрОбласти(Область, "ДатаДоговора", Формат(СсылкаНаОбъект.Дата, "ДФ=""ддММгггг"""));
	
	Область.Параметры.ДолжностьСотрудника 	= Должность;
	Область.Параметры.ФИОСотрудника			= Ответственный.Наименование;
		
	ДопРеквизиты = СсылкаНаОбъект.ДополнительныеРеквизиты.Получить();
	Если ТипЗнч(ДопРеквизиты) = Тип("Структура") И ЗначениеЗаполнено(ДопРеквизиты) Тогда
				
		Для каждого Эл Из Сопоставление Цикл
			
			ИмяПараметра = Эл.Значение;
			ЗначениеПараметра = "";
			Если Найти(Эл.Ключ, "ДопРеквизиты.") > 0 Тогда
				ИмяСвойства = СтрЗаменить(Эл.Ключ, "ДопРеквизиты.", "");
				Если ДопРеквизиты.Свойство(ИмяСвойства) Тогда
					ЗначениеПараметра = ДопРеквизиты[ИмяСвойства];
				КонецЕсли;
			ИначеЕсли Найти(Эл.Ключ, "СсылкаНаОбъект.") > 0 Тогда
				ЗначениеПараметра = СсылкаНаОбъект[СтрЗаменить(Эл.Ключ, "СсылкаНаОбъект.", "")];
			КонецЕсли;
				
			ЗаполнитьПараметрОбласти(Область, ИмяПараметра, ЗначениеПараметра);
					
		КонецЦикла;
				
	КонецЕсли;
	
	ТабАкта.Вывести(Область);
	
	ТабДокумент.Присоединить(ТабАкта);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьКонтрактаМГТС()
// } Феофанов Д.А._16.03.2016_[CQ#14084]

//[нач 14233 Ульянников 14.04.2016
Процедура РаспечататьДопДокументы(СтруктураТВ,СсылкаНаОбъект);
	
	ТабДокумент = Новый ТабличныйДокумент;
    мСклонение = РАРУС_ДобавленныеПроцедуры.ПодключитьКомпонентуСклонение();

	
	Если СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100359" ИЛИ 
		СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100361" Тогда
		Макет = ПолучитьМакет("МакетДопДокументыМТТ");
		ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
		ОбластьМакетаЗаявление = Макет.ПолучитьОбласть("БланкЗаявление");
        
	    ОбластьМакета.Параметры.НомерДоговораСп = ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100359",СтруктураТВ.НомерТелефона,СтруктураТВ.НомерДоговора); 
		ОбластьМакетаЗаявление.Параметры.НомерДоговораСп = ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100359",СтруктураТВ.НомерТелефона,СтруктураТВ.НомерДоговора);
		ОбластьМакета.Параметры.Город           =  СтруктураТВ.СтруктураАдрес.Город;
		ОбластьМакета.Параметры.Фамилия         =  СтруктураТВ.Фамилия;
		ОбластьМакета.Параметры.Имя             =  СтруктураТВ.Имя;
		ОбластьМакета.Параметры.Отчество        =  СтруктураТВ.Отчество;
		ОбластьМакетаЗаявление.Параметры.Фамилия1         =  РАРУС_ДобавленныеПроцедуры.ПолучитьСклонениеФИО(мСклонение,СтруктураТВ.Фамилия,2);
		ОбластьМакетаЗаявление.Параметры.Имя1             =  РАРУС_ДобавленныеПроцедуры.ПолучитьСклонениеФИО(мСклонение,СтруктураТВ.Имя,2);
		ОбластьМакетаЗаявление.Параметры.Отчество1        =  РАРУС_ДобавленныеПроцедуры.ПолучитьСклонениеФИО(мСклонение,СтруктураТВ.Отчество,2);

		ОбластьМакета.Параметры.Телефон         =  СтруктураТВ.НомерТелефонаДоп;
		ОбластьМакетаЗаявление.Параметры.Телефон  = СтруктураТВ.НомерТелефонаДоп;
		ОбластьМакета.Параметры.EmailДоставки   =   СтруктураТВ.Email;
		ОбластьМакета.Параметры.Дата            =   Формат(СсылкаНаОбъект.Дата,"ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.SIM             =   ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100359",СтруктураТВ.IMEYSIM,СтруктураТВ.НомерСмартКарты);
		//сюда добавить изменение текста в ячейке
		Макет.Область("R36C2:R36C5").Текст      = ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100359","1.1.1. Smart-карта №","1.1.1. SIM-карта №");
		

		       
		ОбластьМакета.Параметры.Модель          =   СсылкаНаОбъект.СимКарта.Наименование;
		ОбластьМакета.Параметры.CASID           =   СтруктураТВ.CASID;
		ОбластьМакета.Параметры.МагазинКодМТС           =   ПараметрыСеанса.ТекущийМагазин.Код;

		ОбластьМакетаЗаявление.Параметры.ДокументСерия =  СтруктураТВ.ДокументСерия;
        ОбластьМакетаЗаявление.Параметры.ДокументНомер =  СтруктураТВ.ДокументНомер;
		
		//добавить заполнение СТВ и ТекстСТВ, да и всё, можно будет тестить
		
		Если СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100359" Тогда
			ОбластьМакетаЗаявление.Параметры.СТВ1 = "X";
			ОбластьМакетаЗаявление.Параметры.СТВ2 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ3 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ4 = "";
			
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ1 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 599 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ2 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 599 рублей в течение 25 месяцев.";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ3 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 499 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ4 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 499 рублей в течение 25 месяцев.";
		иначеЕсли СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100361" Тогда
            ОбластьМакетаЗаявление.Параметры.СТВ1 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ2 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ3 = "X";
			ОбластьМакетаЗаявление.Параметры.СТВ4 = "";
			
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ1 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 599 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ2 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 599 рублей в течение 25 месяцев.";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ3 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 499 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ4 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 499 рублей в течение 25 месяцев.";
			
		КонецЕсли;	
		
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОбластьМакетаЗаявление);
	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДокумент.АвтоМасштаб =Ложь;
		ТабДокумент.МасштабПечати = 100;  
		ТабДокумент.ИмяПринтера = "_&_";
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСправа = 0;
		ТабДокумент.ПолеСверху = 0;
		ТабДокумент.ПолеСнизу = 0;
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 3, Ложь, ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект.ПолучитьОбъект()), СсылкаНаОбъект,,,,Ложь,,);

        //ИмяФайла_ = КаталогВременныхФайлов() + ПараметрыСеанса.КодТочки + стрЗаменить(Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy" ),".","")+"Доп" + ".xls";		
		
		Если Константы.ИмяГлавногоКомпьютера.Получить() = "" Тогда
			Если ПараметрыСеанса.ЭтоГлавныйКомпьютер Тогда
				Каталог = "\\"+ИмяКомпьютера()+"\C$\base\Sputnik\";
			Иначе
				Каталог = "\\"+ ПараметрыСеанса.КодТочки+"-KKM"+"\C$\base\Sputnik\";
			КонецЕсли;
		Иначе	
			Каталог = Константы.ИмяГлавногоКомпьютера.Получить()+"\C$\base\Sputnik\";
		КонецЕсли;
		Попытка
			СоздатьКаталог(Каталог);
		Исключение
			Каталог = КаталогВременныхФайлов();
		КонецПопытки;
		
	    ИмяФайла_ = Каталог +СокрЛП(СсылкаНаОбъект.УникальныйИдентификатор())+ ПараметрыСеанса.КодТочки + стрЗаменить(Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy" ),".","")+"Доп" + ".xls";
		ТабДокумент.Записать(ИмяФайла_, ТипФайлаТабличногоДокумента.XLS);
        СтруктураМ.Вставить("ИмяФайлаДоп", ИмяФайла_);

		
		
	ИначеЕсли СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100358" ИЛИ 
		СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100360" Тогда	
		Макет = ПолучитьМакет("МакетДопДокументыМТТ_Полн");
		ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
		ОбластьМакетаЗаявление = Макет.ПолучитьОбласть("БланкЗаявление");

		ОбластьМакета.Параметры.НомерДоговораСп = ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100358",СтруктураТВ.НомерТелефона,СтруктураТВ.НомерДоговора); 
		ОбластьМакетаЗаявление.Параметры.НомерДоговораСп = ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100358",СтруктураТВ.НомерТелефона,СтруктураТВ.НомерДоговора);
		ОбластьМакета.Параметры.Город           =  СтруктураТВ.СтруктураАдрес.Город;
		ОбластьМакета.Параметры.Фамилия         =  СтруктураТВ.Фамилия;
		ОбластьМакета.Параметры.Имя             =  СтруктураТВ.Имя;
		ОбластьМакета.Параметры.Отчество        =  СтруктураТВ.Отчество;
		ОбластьМакетаЗаявление.Параметры.Фамилия1         =  РАРУС_ДобавленныеПроцедуры.ПолучитьСклонениеФИО(мСклонение,СтруктураТВ.Фамилия,2);
		ОбластьМакетаЗаявление.Параметры.Имя1             =  РАРУС_ДобавленныеПроцедуры.ПолучитьСклонениеФИО(мСклонение,СтруктураТВ.Имя,2);
		ОбластьМакетаЗаявление.Параметры.Отчество1        =  РАРУС_ДобавленныеПроцедуры.ПолучитьСклонениеФИО(мСклонение,СтруктураТВ.Отчество,2);
		
		ОбластьМакета.Параметры.Телефон         =  СтруктураТВ.НомерТелефонаДоп;
		ОбластьМакетаЗаявление.Параметры.Телефон  = СтруктураТВ.НомерТелефонаДоп;
		ОбластьМакета.Параметры.EmailДоставки   =   СтруктураТВ.Email;
		ОбластьМакета.Параметры.Дата            =   Формат(СсылкаНаОбъект.Дата,"ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.SIM             =   ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100358",СтруктураТВ.IMEYSIM,СтруктураТВ.НомерСмартКарты);
		//сюда добавить изменение текста в ячейке
		Макет.Область("R41C2:R41C5").Текст      = ?(СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100358","1.1.4. Smart-карта №","1.1.4. SIM-карта №");
		
		
		ОбластьМакета.Параметры.Модель          =   СсылкаНаОбъект.СимКарта.Наименование;
		ОбластьМакета.Параметры.CASID           =   СтруктураТВ.CASID;
		ОбластьМакета.Параметры.МагазинКодМТС           =   ПараметрыСеанса.ТекущийМагазин.Код;
		
		ОбластьМакетаЗаявление.Параметры.ДокументСерия =  СтруктураТВ.ДокументСерия;
		ОбластьМакетаЗаявление.Параметры.ДокументНомер =  СтруктураТВ.ДокументНомер;
		
		//добавить заполнение СТВ и ТекстСТВ, да и всё, можно будет тестить
		
		Если СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100358" Тогда
			ОбластьМакетаЗаявление.Параметры.СТВ1 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ2 = "X";
			ОбластьМакетаЗаявление.Параметры.СТВ3 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ4 = "";
			
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ1 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 599 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ2 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 599 рублей в течение 25 месяцев.";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ3 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 499 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ4 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 499 рублей в течение 25 месяцев.";
		иначеЕсли СсылкаНаОбъект.СимКарта.АртикулМДМ = "A0810-100360" Тогда
			ОбластьМакетаЗаявление.Параметры.СТВ1 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ2 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ3 = "";
			ОбластьМакетаЗаявление.Параметры.СТВ4 = "X";
			
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ1 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 599 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ2 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 599 рублей в течение 25 месяцев.";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ3 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (19 мес) стоимостью 499 рублей в течение 19 месяцев;";
			ОбластьМакетаЗаявление.Параметры.ТекстСТВ4 = "СТВ. Оборудование за 0. Доступ к вещательной платформе (25 мес) стоимостью 499 рублей в течение 25 месяцев.";
			
		КонецЕсли;	
		
		
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОбластьМакетаЗаявление);
	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДокумент.АвтоМасштаб =Ложь;
		ТабДокумент.МасштабПечати = 100;  
		ТабДокумент.ИмяПринтера = "_&_";
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСправа = 0;
		ТабДокумент.ПолеСверху = 0;
		ТабДокумент.ПолеСнизу = 0;
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 3, Ложь, ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект.ПолучитьОбъект()), СсылкаНаОбъект,,,,Ложь,,);

		//ИмяФайла_ = КаталогВременныхФайлов() + ПараметрыСеанса.КодТочки + стрЗаменить(Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy" ),".","")+"Доп" + ".xls";		
		Если Константы.ИмяГлавногоКомпьютера.Получить() = "" Тогда
			Если ПараметрыСеанса.ЭтоГлавныйКомпьютер Тогда
				Каталог = "\\"+ИмяКомпьютера()+"\C$\base\Sputnik\";
			Иначе
				Каталог = "\\"+ ПараметрыСеанса.КодТочки+"-KKM"+"\C$\base\Sputnik\";
			КонецЕсли;
		Иначе	
			Каталог = Константы.ИмяГлавногоКомпьютера.Получить()+"\C$\base\Sputnik\";
		КонецЕсли;
		Попытка
			СоздатьКаталог(Каталог);
		Исключение
			Каталог = КаталогВременныхФайлов();
		КонецПопытки;

	    ИмяФайла_ = Каталог +СокрЛП(СсылкаНаОбъект.УникальныйИдентификатор())+ ПараметрыСеанса.КодТочки + стрЗаменить(Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy" ),".","")+"Доп" + ".xls";
		ТабДокумент.Записать(ИмяФайла_, ТипФайлаТабличногоДокумента.XLS);
        СтруктураМ.Вставить("ИмяФайлаДоп", ИмяФайла_);

		
		
	КонецЕсли;
	
	
	
	
	
КонецПроцедуры	
// 14233 Ульянников 14.04.2016 кон]


Функция Печать() Экспорт
	
	//Печать
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйКонтракт_КонтрактМТСпрепэйдНовый_" + Строка(Новый УникальныйИдентификатор);
	//13797_Ульянников_
	НовыйФорматРФА = Ложь;
	Если РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("РФА_А4") Тогда
		НовыйФорматРФА = Истина;	
	КонецЕсли; 	
	//13797_Ульянников
	
	КонтрактОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	//{РТК_CQ#12977_10.04.2015 16:59:04_Прядиев_
	ВыводитьСвойстваКонтракта = Истина;
	//РТК_CQ#12977_10.04.2015 16:59:04_Прядиев}
	
	Если ТипЗнч(КонтрактОбъект.ЭтоПостпейдКонтракт) = Тип("Булево") Тогда
		//13797_Ульянников
		Макет = ?(НовыйФорматРФА, ПолучитьМакет("Макет152ФЗ_А4"), ПолучитьМакет("Макет152ФЗ"));
		//13797_Ульянников
		
		//6766_Ульянников
		Если НЕ НовыйФорматРФА И НЕ РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("CQ13791") Тогда
			
			Макет = ПолучитьМакет("Макет152ФЗ_old");
			
		КонецЕсли;	
		//6766_Ульянников
		
		//{РТК_CQ#12977_10.04.2015 16:59:04_Прядиев_
		ВыводитьСвойстваКонтракта = Истина;
		//РТК_CQ#12977_10.04.2015 16:59:04_Прядиев}
		
		// РТК_8407_05.05.2012 10:47:32_Гордиенко_}
	Иначе
		Если КонтрактОбъект.ЭтоПостпейдКонтракт = 0 Тогда
			//13797_Ульянников
			Макет = ?(НовыйФорматРФА, ПолучитьМакет("Макет152ФЗ_А4"), ПолучитьМакет("Макет152ФЗ"));
			//13797_Ульянников
			//6766_Ульянников
			Если НЕ НовыйФорматРФА И НЕ РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("CQ13791") Тогда
				
				Макет = ПолучитьМакет("Макет152ФЗ_old");
				
			КонецЕсли;	
			//6766_Ульянников

			//{РТК_CQ#12977_10.04.2015 16:59:04_Прядиев_
			ВыводитьСвойстваКонтракта = Истина;
			//РТК_CQ#12977_10.04.2015 16:59:04_Прядиев}
			//{РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_ 
		ИначеЕсли КонтрактОбъект.ЭтоПостпейдКонтракт = 2 Тогда
			//13797_Ульянников
			Макет = ?(НовыйФорматРФА, ПолучитьМакет("МакетMNP_А4"), ПолучитьМакет("МакетMNP"));
			//13797_Ульянников
			//6766_Ульянников
			Если НЕ НовыйФорматРФА И НЕ РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("CQ13791") Тогда
				
				Макет = ПолучитьМакет("МакетMNP_old");
				
			КонецЕсли;	
			//6766_Ульянников

			//РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_}
			//{РТК_CQ#12977_10.04.2015 16:59:04_Прядиев_
			ВыводитьСвойстваКонтракта = Истина;
			//РТК_CQ#12977_10.04.2015 16:59:04_Прядиев}
		ИначеЕсли КонтрактОбъект.ЭтоПостпейдКонтракт = 3 Тогда
			Макет = ПолучитьМакет("МакетDSA");
		Иначе
			//13797_Ульянников
			Макет = ?(НовыйФорматРФА, ПолучитьМакет("Макет152ФЗ_А4"), ПолучитьМакет("Макет152ФЗ"));
			//13797_Ульянников
			//6766_Ульянников
			Если НЕ НовыйФорматРФА И НЕ РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("CQ13791") Тогда
				
				Макет = ПолучитьМакет("Макет152ФЗ_old");
				
			КонецЕсли;	
			//6766_Ульянников

		КонецЕсли;
		
	КонецЕсли;
	//[нач RTKDEVICRET-23 Ульянников 15.03.2016
	Если СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.ПерецМобайл Тогда		
		Макет = ПолучитьМакет("МакетПерец");		
	КонецЕсли;	
	// RTKDEVICRET-23 Ульянников 15.03.2016 кон]

	//РТК__10886__26.07.2013 15:44:56_Сбродов_
	//[Спутник_13410_Ульянников
	Попытка
		Если  СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.СпутниковоеТВ Тогда
			
			СтруктураТВ = КонтрактОбъект.ДополнительныеРеквизиты.Получить();
			Если ТипЗнч(СтруктураТВ) = Тип("Структура") тогда
				Если СтруктураТВ.ВидОперации = 0 Тогда
					Макет = ПолучитьМакет("МакетСпутник");
					ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
					ОбластьМакета.Параметры.КодовоеСлово = СтруктураТВ.КодовоеСлово;
					Оператор_ = "";
					Если РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("Оператор_Текст", Оператор_) тогда
						
						ОбластьМакета.Параметры.ОператорМТС = Оператор_;
					Иначе
						ОбластьМакета.Параметры.ОператорМТС = "Публичное акционерное общество ""Мобильные ТелеСистемы"" 109147 г.Москва, Марксистская ул., 4";
					КонецЕсли;	
					
					ОбластьМакета.Параметры.Тариф              = СтруктураТВ.ТарифноеПредложение;
					ОбластьМакета.Параметры.Фамилия            = СтруктураТВ.Фамилия;
					ОбластьМакета.Параметры.Имя                = СтруктураТВ.Имя;
					ОбластьМакета.Параметры.Отчество           = СтруктураТВ.Отчество;
					ОбластьМакета.Параметры.ДатаРождения       = СтруктураТВ.ДатаРождения;
					ОбластьМакета.Параметры.ПолМужской         = ?(СтруктураТВ.Пол = "Муж",Истина, Ложь);
					ОбластьМакета.Параметры.ПолЖенский         = ?(СтруктураТВ.Пол = "Жен",Истина, Ложь);
					ОбластьМакета.Параметры.МестоРождения      = СтруктураТВ.МестоРождения;
					ОбластьМакета.Параметры.ДокументВид        = СтруктураТВ.ВидДокумента;
					ОбластьМакета.Параметры.ДокументСерия      = СтруктураТВ.ДокументСерия;
					ОбластьМакета.Параметры.ДокументНомер      = СтруктураТВ.ДокументНомер;
					ОбластьМакета.Параметры.ДокументКемВыдан   = СтруктураТВ.ДокументКемВыдан;
					ОбластьМакета.Параметры.ДокументДатаВыдачи = СтруктураТВ.ДокументДатаВыдачи;
					
					Если ТипЗнч(СтруктураТВ.СтруктураАдрес) = Тип("Структура") тогда
						Если СтруктураТВ.СтруктураАдрес.Свойство("Индекс") Тогда
							ОбластьМакета.Параметры.ИндексРег        =   СтруктураТВ.СтруктураАдрес.Индекс;
						Иначе
							ОбластьМакета.Параметры.ИндексРег        = "";
						КонецЕсли;
						Если СтруктураТВ.СтруктураАдрес.Свойство("НазваниеРегиона") Тогда
							ОбластьМакета.Параметры.РеспубликаРег    =  СтруктураТВ.СтруктураАдрес.НазваниеРегиона;
						Иначе
							ОбластьМакета.Параметры.РеспубликаРег    = "";
						КонецЕсли;
						Если СтруктураТВ.СтруктураАдрес.Свойство("НазваниеРегиона") И СтруктураТВ.СтруктураАдрес.Свойство("Район") И СтруктураТВ.СтруктураАдрес.Свойство("Город") Тогда
							ОбластьМакета.Параметры.ОбластьГородРег  = СтруктураТВ.СтруктураАдрес.НазваниеРегиона + " "+ СтруктураТВ.СтруктураАдрес.Район + " " +СтруктураТВ.СтруктураАдрес.Город;
						Иначе
							ОбластьМакета.Параметры.ОбластьГородРег  = "";
						КонецЕсли;
						Если СтруктураТВ.СтруктураАдрес.Свойство("Улица") И СтруктураТВ.СтруктураАдрес.Свойство("Дом") И СтруктураТВ.СтруктураАдрес.Свойство("Строение") И СтруктураТВ.СтруктураАдрес.Свойство("Корпус") И СтруктураТВ.СтруктураАдрес.Свойство("Квартира") Тогда
							ОбластьМакета.Параметры.УлицаДомКвРег    = СтруктураТВ.СтруктураАдрес.Улица+" "+СтруктураТВ.СтруктураАдрес.Дом+" "+СтруктураТВ.СтруктураАдрес.Строение+" "+СтруктураТВ.СтруктураАдрес.Корпус+" "+СтруктураТВ.СтруктураАдрес.Квартира;
						Иначе
							ОбластьМакета.Параметры.УлицаДомКвРег    = "";
						КонецЕсли;
					КонецЕсли;
					
					ОбластьМакета.Параметры.ЗарегистрированОрганизацией = СтруктураТВ.ЗарегистрированОрганизацией;
					ОбластьМакета.Параметры.СрокРегистрации             = СтруктураТВ.СрокРегистрации;
					ОбластьМакета.Параметры.НазваниеОрганизации         = "";
					ОбластьМакета.Параметры.ЮрАдрес                     = "";
					ОбластьМакета.Параметры.АдресФакт                   = "";
					ОбластьМакета.Параметры.ИННОрганизации              = "";
					ОбластьМакета.Параметры.МагазинКодМТС               = ПараметрыСеанса.ТекущийМагазин.Код;
					ОбластьМакета.Параметры.Ответственный               = СсылкаНаОбъект.Ответственный;
					Если СтруктураТВ.СогласиеНаДоступ = Истина Тогда
						ОбластьМакета.Параметры.ПредоставлениеДоступа       = "x";
					КонецЕсли;
					Если СтруктураТВ.СогласиеНаПередачу = Истина Тогда
						ОбластьМакета.Параметры.ПередачаТретьимЛицам        = "x";
					КонецЕсли;
					Если СтруктураТВ.СогласиеНаРекламу = Истина Тогда
						ОбластьМакета.Параметры.ПолучениеРекламы            = "x";
					КонецЕсли;
					ОбластьМакета.Параметры.CASID          = СтруктураТВ.CASID;
					ОбластьМакета.Параметры.SIM            = СтруктураТВ.IMEYSIM;
					ОбластьМакета.Параметры.НомерТелефона  = СтруктураТВ.НомерТелефона;
					ОбластьМакета.Параметры.EmailДоставки = СтруктураТВ.Email;
					ОбластьМакета.Параметры.Дата          = СсылкаНаОбъект.Дата;
					ОбластьМакета.Параметры.АдресОП       = ПараметрыСеанса.ТекущийМагазин.ФактическийАдрес;
					Попытка
						тел_ = СтруктураТВ.НомерТелефонаДоп;
						Если ЗначениеЗаполнено(СтруктураТВ.НомерТелефонаДоп) Тогда
							ОбластьМакета.Параметры.тел1  = Сред(тел_,1,1);
							ОбластьМакета.Параметры.тел2  = Сред(тел_,2,1);
							ОбластьМакета.Параметры.тел3  = Сред(тел_,3,1);
							ОбластьМакета.Параметры.тел4  = Сред(тел_,4,1);
							ОбластьМакета.Параметры.тел5  = Сред(тел_,5,1);
							ОбластьМакета.Параметры.тел6  = Сред(тел_,6,1);
							ОбластьМакета.Параметры.тел7  = Сред(тел_,7,1);
							ОбластьМакета.Параметры.тел8  = Сред(тел_,8,1);
							ОбластьМакета.Параметры.тел9  = Сред(тел_,9,1);
							ОбластьМакета.Параметры.тел10 = Сред(тел_,10,1);
						КонецЕсли;
					Исключение
					КонецПопытки;
					
					РисунокШтрихКод = ОбластьМакета.Рисунки.КодШтрихКода;
					КодШтрихКода = ПараметрыСеанса.КодТочки + СтруктураТВ.CASID;	
					// Производим передачу данных о штрих-коде в объект
					Попытка
						РисунокШтрихКод.Объект.text = КодШтрихКода;
						РисунокШтрихКод.Объект.alphabet=5;
						РисунокШтрихКод.Объект.ECI=0;
						
					Исключение
						// При выводе штрих-кода возникла неизвестная ошибка. Возможно класс печати не зарегистрирован.
					КонецПопытки;
					
					
					ОбластьМакета.Параметры.СпособДоставки ="";
					ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР ВЕЩАТЕЛЯ";
					ТабДокумент.Вывести(ОбластьМакета);
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокумент.Вывести(ОбластьМакета);
					ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР АБОНЕНТА";
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокумент.Вывести(ОбластьМакета);			
					ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
					ТабДокумент.АвтоМасштаб =Ложь;
					ТабДокумент.МасштабПечати = 100;  
					ТабДокумент.ИмяПринтера = "_&_";
					ТабДокумент.ПолеСлева = 0;
					ТабДокумент.ПолеСправа = 0;
					ТабДокумент.ПолеСверху = 0;
					ТабДокумент.ПолеСнизу = 0;
					//[нач 14233 Ульянников 14.04.2016
					Попытка
						РаспечататьДопДокументы(СтруктураТВ,СсылкаНаОбъект);	
					Исключение
					КонецПопытки;
					// 14233 Ульянников 14.04.2016 кон]

				ИначеЕсли СтруктураТВ.ВидОперации = 1 Тогда		   
					Макет = ПолучитьМакет("МакетСпутникСмарт");
					ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
					//ОбластьМакета.Параметры.КодовоеСлово = СтруктураТВ.КодовоеСлово;
					//Если РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("Оператор_Текст", Оператор_) тогда
					//	
					//	ОбластьМакета.Параметры.ОператорМТС = Оператор_;
					//Иначе
					//	ОбластьМакета.Параметры.ОператорМТС = "Публичное акционерное общество ""Мобильные ТелеСистемы"" 109147 г.Москва, Марксистская ул., 4";
					//КонецЕсли;	
					
					ОбластьМакета.Параметры.Тариф              = СтруктураТВ.ТарифноеПредложение;
					ОбластьМакета.Параметры.Фамилия            = СтруктураТВ.Фамилия;
					ОбластьМакета.Параметры.Имя                = СтруктураТВ.Имя;
					ОбластьМакета.Параметры.Отчество           = СтруктураТВ.Отчество;
					ОбластьМакета.Параметры.ДатаРождения       = СтруктураТВ.ДатаРождения;
					ОбластьМакета.Параметры.ПолМужской         = ?(СтруктураТВ.Пол = "Муж",Истина, Ложь);
					ОбластьМакета.Параметры.ПолЖенский         = ?(СтруктураТВ.Пол = "Жен",Истина, Ложь);
					ОбластьМакета.Параметры.МестоРождения      = СтруктураТВ.МестоРождения;
					ОбластьМакета.Параметры.ДокументВид        = СтруктураТВ.ВидДокумента;
					ОбластьМакета.Параметры.ДокументСерия      = СтруктураТВ.ДокументСерия;
					ОбластьМакета.Параметры.ДокументНомер      = СтруктураТВ.ДокументНомер;
					ОбластьМакета.Параметры.ДокументКемВыдан   = СтруктураТВ.ДокументКемВыдан;
					ОбластьМакета.Параметры.ДокументДатаВыдачи = СтруктураТВ.ДокументДатаВыдачи;
					
					Если ТипЗнч(СтруктураТВ.СтруктураАдрес) = Тип("Структура") тогда
						Попытка
							ОбластьМакета.Параметры.ИндексРег        =   СтруктураТВ.СтруктураАдрес.Индекс;
							ОбластьМакета.Параметры.РеспубликаРег    =  СтруктураТВ.СтруктураАдрес.НазваниеРегиона;
							ОбластьМакета.Параметры.ОбластьГородРег  = СтруктураТВ.СтруктураАдрес.НазваниеРегиона + " "+ СтруктураТВ.СтруктураАдрес.Район + " " +СтруктураТВ.СтруктураАдрес.Город;
							ОбластьМакета.Параметры.УлицаДомКвРег    = СтруктураТВ.СтруктураАдрес.Улица+" "+СтруктураТВ.СтруктураАдрес.Дом+" "+СтруктураТВ.СтруктураАдрес.Строение+" "+СтруктураТВ.СтруктураАдрес.Корпус+" "+СтруктураТВ.СтруктураАдрес.Квартира;
						Исключение
							Попытка
								ОбластьМакета.Параметры.ИндексРег        =   СтруктураТВ.СтруктураАдресПодключения.Индекс;
								ОбластьМакета.Параметры.РеспубликаРег    =  СтруктураТВ.СтруктураАдресПодключения.НазваниеРегиона;
								ОбластьМакета.Параметры.ОбластьГородРег  = СтруктураТВ.СтруктураАдресПодключения.НазваниеРегиона + " "+ СтруктураТВ.СтруктураАдресПодключения.Район + " " +СтруктураТВ.СтруктураАдресПодключения.Город;
								ОбластьМакета.Параметры.УлицаДомКвРег    = СтруктураТВ.СтруктураАдресПодключения.Улица+" "+СтруктураТВ.СтруктураАдресПодключения.Дом+" "+СтруктураТВ.СтруктураАдресПодключения.Строение+" "+СтруктураТВ.СтруктураАдресПодключения.Корпус+" "+СтруктураТВ.СтруктураАдресПодключения.Квартира;
							Исключение
							КонецПопытки;
						КонецПопытки;
						
					КонецЕсли;

					
					ОбластьМакета.Параметры.ЗарегистрированОрганизацией = СтруктураТВ.ЗарегистрированОрганизацией;
					ОбластьМакета.Параметры.СрокРегистрации             = СтруктураТВ.СрокРегистрации;
					ОбластьМакета.Параметры.НазваниеОрганизации         = "";
					ОбластьМакета.Параметры.ЮрАдрес                     = "";
					ОбластьМакета.Параметры.АдресФакт                   = "";
					ОбластьМакета.Параметры.ИННОрганизации              = "";
					//ОбластьМакета.Параметры.МагазинКодМТС               = ПараметрыСеанса.ТекущийМагазин.Код;
					//				ОбластьМакета.Параметры.Ответственный               = СсылкаНаОбъект.Ответственный;
					Если СтруктураТВ.СогласиеНаДоступ = Истина Тогда
						ОбластьМакета.Параметры.ПредоставлениеДоступа       = "x";
					КонецЕсли;
					Если СтруктураТВ.СогласиеНаПередачу = Истина Тогда
						ОбластьМакета.Параметры.ПередачаТретьимЛицам        = "x";
					КонецЕсли;
					Если СтруктураТВ.СогласиеНаРекламу = Истина Тогда
						ОбластьМакета.Параметры.ПолучениеРекламы            = "x";
					КонецЕсли;
					ОбластьМакета.Параметры.СерийныйНомерОборудования        = СтруктураТВ.CASID;
					ОбластьМакета.Параметры.EmailДоставки = СтруктураТВ.Email;
					ОбластьМакета.Параметры.Дата          = СсылкаНаОбъект.Дата;
					ОбластьМакета.Параметры.АдресОП       = ПараметрыСеанса.ТекущийМагазин.ФактическийАдрес;
					Попытка
						тел_ = СтруктураТВ.НомерТелефонаДоп;
						Если ЗначениеЗаполнено(СтруктураТВ.НомерТелефонаДоп) Тогда
							ОбластьМакета.Параметры.тел1  = Сред(тел_,1,1);
							ОбластьМакета.Параметры.тел2  = Сред(тел_,2,1);
							ОбластьМакета.Параметры.тел3  = Сред(тел_,3,1);
							ОбластьМакета.Параметры.тел4  = Сред(тел_,4,1);
							ОбластьМакета.Параметры.тел5  = Сред(тел_,5,1);
							ОбластьМакета.Параметры.тел6  = Сред(тел_,6,1);
							ОбластьМакета.Параметры.тел7  = Сред(тел_,7,1);
							ОбластьМакета.Параметры.тел8  = Сред(тел_,8,1);
							ОбластьМакета.Параметры.тел9  = Сред(тел_,9,1);
							ОбластьМакета.Параметры.тел10 = Сред(тел_,10,1);
						КонецЕсли;
					Исключение
					КонецПопытки;
					
					РисунокШтрихКод = ОбластьМакета.Рисунки.КодШтрихКода;
					КодШтрихКода = ПараметрыСеанса.КодТочки + СтруктураТВ.CASID;	
					// Производим передачу данных о штрих-коде в объект
					Попытка
						РисунокШтрихКод.Объект.text = КодШтрихКода;
						РисунокШтрихКод.Объект.alphabet=5;
						РисунокШтрихКод.Объект.ECI=0;
						
					Исключение
						// При выводе штрих-кода возникла неизвестная ошибка. Возможно класс печати не зарегистрирован.
					КонецПопытки;
					
					//				ОбластьМакета.Параметры.СпособДоставки ="";
					ОбластьМакета.Параметры.НомерДоговораСп = СтруктураТВ.НомерДоговора;
					ОбластьМакета.Параметры.НомерСК =         СтруктураТВ.НомерСмартКарты;
					ОбластьМакета.Параметры.НомерЛС =         СтруктураТВ.НомерДоговора;
					ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР ВЕЩАТЕЛЯ";
					ТабДокумент.Вывести(ОбластьМакета);
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР АБОНЕНТА";
					ТабДокумент.Вывести(ОбластьМакета);			
					ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
					ТабДокумент.АвтоМасштаб =Ложь;
					ТабДокумент.МасштабПечати = 100;  
					ТабДокумент.ИмяПринтера = "_&_";
					ТабДокумент.ПолеСлева = 0;
					ТабДокумент.ПолеСправа = 0;
					ТабДокумент.ПолеСверху = 0;
					ТабДокумент.ПолеСнизу = 0;
					//[нач 14233 Ульянников 14.04.2016
					Попытка
						РаспечататьДопДокументы(СтруктураТВ,СсылкаНаОбъект);	
					Исключение
					КонецПопытки;
					// 14233 Ульянников 14.04.2016 кон]
					
					
					
					
				КонецЕсли;
				
				
				Если Константы.ИмяГлавногоКомпьютера.Получить() = "" Тогда
					Если ПараметрыСеанса.ЭтоГлавныйКомпьютер Тогда
						Каталог = "\\"+ИмяКомпьютера()+"\C$\base\Sputnik\";
					Иначе
						Каталог = "\\"+ ПараметрыСеанса.КодТочки+"-KKM"+"\C$\base\Sputnik\";
					КонецЕсли;
				Иначе	
					Каталог = Константы.ИмяГлавногоКомпьютера.Получить()+"\C$\base\Sputnik\";
				КонецЕсли;
				Попытка
					СоздатьКаталог(Каталог);
				Исключение
					Каталог = КаталогВременныхФайлов();
				КонецПопытки;
				ИмяФайла_ = Каталог +СокрЛП(СсылкаНаОбъект.УникальныйИдентификатор())+ ПараметрыСеанса.КодТочки + стрЗаменить(Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy" ),".","") + ".xls";
				
				ТабДокумент.Записать(ИмяФайла_, ТипФайлаТабличногоДокумента.XLS);
				СтрокаХЗ = КонтрактОбъект.ХранилищеДополнительнойИнформации.Добавить();
				СтрокаХЗ.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл;
				СтрокаХЗ.ВидПрилагаемогоДокумента = Перечисления.ВидыПрилагаемыхДокументовККонтракту.ЗаявлениеНаПодключение;
				СтрокаХЗ.Наименование = "СпутниковоеТВ";
				//СтрокаХЗ.НомерСтроки = 1;
				//14233_Ульянников
				Если СтруктураМ.Свойство("ИмяФайлаДоп") Тогда
					СтруктураМ.Вставить("ИмяФайлаОсн", ИмяФайла_);
					СтрокаХЗ.Хранилище = Новый ХранилищеЗначения(СтруктураМ);
				Иначе	
					СтрокаХЗ.Хранилище = Новый ХранилищеЗначения(ИмяФайла_);
				КонецЕсли;
				//14233_Ульянников


				Попытка
					Контрактобъект.Записать();
				Исключение
				КонецПопытки;	
				
				Возврат ТабДокумент;	  
				
			КонецЕсли;		  
		КонецЕсли;	
	Исключение
	КонецПопытки;
	//Спутник_13410_Ульянников]	
	
	
	//мтт_Ульянников
	Если РТК_ДобавленныеПроцедуры_Сервер.РелизНеСтарее("1.1.1.31.100") Тогда	
		
		СтруктураДанныхПечатиМТТ = СсылкаНаОбъект.ПолучитьОбъект().ПолучитьДанныеПечати(); 
		
		Если СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.МТТ Тогда
			Попытка
				СтруктураМТТ = КонтрактОбъект.ДополнительныеРеквизиты.Получить();
				
				Если ТипЗнч(СтруктураМТТ) = Тип("Структура") Тогда
					Если СтруктураМТТ.Свойство("РезультатОтправки") Тогда
						
						Если  СтруктураМТТ.РезультатОтправки.Свойство("ContractData") Тогда
							
							Если СтруктураМТТ.РезультатОтправки.ContractData.ExtraICCID <> "" И (ТипЗнч(СтруктураМТТ.РезультатОтправки.ContractData.ExtraMSISDN) <> Тип("Null") И СтруктураМТТ.РезультатОтправки.ContractData.ExtraMSISDN <> "") тогда
								Макет = ПолучитьМакет("МакетМТТРусскийДоговор");
								ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
								ОбластьМакета.Параметры.ДоговорНомер = "";//СтруктураМТТ.РезультатОтправки.ContractData.Number;
								
								ОбластьМакета.Параметры.ДоговорДата  = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.ContractData.ContractDate,"/",""),"(",""),")",""),"Date","")),10);
								ОбластьМакета.Параметры.АбонентФамилия = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Surname;
								ОбластьМакета.Параметры.Имя = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Name;
								ОбластьМакета.Параметры.Отчество = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Patername;
								ДатаРожд_ =  РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthDate,"/",""),"(",""),")",""),"Date",""));
								ОбластьМакета.Параметры.ДеньДатаРождения = Лев(ДатаРожд_,2);
								ОбластьМакета.Параметры.МесяцДатаРождения = сред(ДатаРожд_,4,2);
								ОбластьМакета.Параметры.ГодДатаРождения = сред(ДатаРожд_,7,4);
								ОбластьМакета.Параметры.ДокументСерия = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Series;
								ОбластьМакета.Параметры.ДокументНомер = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Number;
								ОбластьМакета.Параметры.ДокументКемВыдан = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuingAuthority.Text;
								ОбластьМакета.Параметры.ДокументДатаВыдачи = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuedDate,"/",""),"(",""),")",""),"Date","")),10);
								ОбластьМакета.Параметры.МестоРождения =  СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthPlace;
								ОбластьМакета.Параметры.ТарифныйПлан = СтруктураМТТ.РезультатОтправки.ContractData.RateTitle;
								
								СтруктураАдрес =  РазложитьАдрес(СтруктураМТТ.РезультатОтправки.PrivatePerson.AddressByDocument.Text);
								
								ОбластьМакета.Параметры.Индекс = СтруктураАдрес.Индекс;
								//{6824_20.02.2016 12:57:48_Суслова
								//город+населенный пункт+доп. территория
								Если СтруктураАдрес.Регион="Москва г" Тогда
									Город=СтруктураАдрес.Регион+" ";
								Иначе	
									Город="";
								КонецЕсли;	
								Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.Город) и ВРЕГ(СтруктураАдрес.Город)<>"НЕТ",(СтруктураАдрес.Город),"")+" ";
								Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.НаселенныйПункт) и ВРЕГ(СтруктураАдрес.НаселенныйПункт)<>"НЕТ",(СтруктураАдрес.НаселенныйПункт),"")+" ";
								Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.ДопТерритория) и ВРЕГ(СтруктураАдрес.ДопТерритория)<>"НЕТ",(СтруктураАдрес.ДопТерритория),"");
								Если Город="" Тогда
									Город=СтруктураАдрес.Регион;
								КонецЕсли;	
								ОбластьМакета.Параметры.Город =Город;
								//ОбластьМакета.Параметры.Город =  СтруктураАдрес.Город;
 								//6824_20.02.2016 12:57:48_Суслова}
																                        								
								ОбластьМакета.Параметры.Улица =  СтруктураАдрес.Улица;
								ОбластьМакета.Параметры.ДомКорпус =  СтруктураАдрес.Дом + СтруктураАдрес.Корпус + СтруктураАдрес.Строение;
								ОбластьМакета.Параметры.Квартира =  СтруктураАдрес.Квартира;
								ОбластьМакета.Параметры.АдресДоп = СтрЗаменить(СтрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.AddressByDocument.Text,",,",","),",,",",");
                                ОбластьМакета.Параметры.Email =  СтруктураМТТ.РезультатОтправки.ClientContact.Email;
								ОбластьМакета.Параметры.Телефон = СтруктураМТТ.РезультатОтправки.ClientContact.Phone;
								ОбластьМакета.Параметры.АбонентскийНомер = СтруктураМТТ.РезультатОтправки.ContractData.PhoneNumber + " / " + СтруктураМТТ.РезультатОтправки.ContractData.ExtraMSISDN;
								ОбластьМакета.Параметры.НомерСИМ = СтруктураМТТ.РезультатОтправки.ContractData.ICCID + " / " + СтруктураМТТ.РезультатОтправки.ContractData.ExtraICCID;
								ОбластьМакета.Параметры.СпособМэйл = "";
								ОбластьМакета.Параметры.СпособПочта = "";
								ОбластьМакета.Параметры.СпособОфис = "";
								ОбластьМакета.Параметры.БезДоставки = "";
								ОбластьМакета.Параметры.Абонент =  СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Surname + " " + СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Name + " " + СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Patername;
								ОбластьМакета.Параметры.Ответственный = СтруктураМТТ.РезультатОтправки.SellerData.FIO;
								ОбластьМакета.Параметры.НеПредоставлениеДоступа =  "";
								ОбластьМакета.Параметры.НеПередачаТретьимЛицам =   "";
								ОбластьМакета.Параметры.НеПолучениеРекламы =       "";
								ОбластьМакета.Параметры.НеПолучениеСМС =           "";
								ОбластьМакета.Параметры.НеОбработкаРТК =           "";
								
								ОбластьМакета.Параметры.КодШтрихКода 		= СтруктураДанныхПечатиМТТ.КодШтрихКода;
								
								ОбластьМакета1 = Макет.ПолучитьОбласть("БланкТаджик");
								ОбластьМакета1.Параметры.ДоговорНомер = "";//СтруктураМТТ.РезультатОтправки.ContractData.Number;
								
								ОбластьМакета1.Параметры.ДоговорДата  = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.ContractData.ContractDate,"/",""),"(",""),")",""),"Date","")),10);
								ОбластьМакета1.Параметры.АбонентФамилия = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Surname;
								ОбластьМакета1.Параметры.Имя = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Name;
								ОбластьМакета1.Параметры.Отчество = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Patername;
								ДатаРожд_ =  РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthDate,"/",""),"(",""),")",""),"Date",""));
								ОбластьМакета1.Параметры.ДеньДатаРождения = Лев(ДатаРожд_,2);
								ОбластьМакета1.Параметры.МесяцДатаРождения = сред(ДатаРожд_,4,2);
								ОбластьМакета1.Параметры.ГодДатаРождения = сред(ДатаРожд_,7,4);
								ОбластьМакета1.Параметры.ДокументСерия = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Series;
								ОбластьМакета1.Параметры.ДокументНомер = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Number;
								ОбластьМакета1.Параметры.ДокументКемВыдан = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuingAuthority.Text;
								ОбластьМакета1.Параметры.ДокументДатаВыдачи = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuedDate,"/",""),"(",""),")",""),"Date","")),10);
								ОбластьМакета1.Параметры.МестоРождения =  СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthPlace;
								ОбластьМакета1.Параметры.ТарифныйПлан = СтруктураМТТ.РезультатОтправки.ContractData.RateTitle;
								
								СтруктураАдрес =  РазложитьАдрес(СтруктураМТТ.РезультатОтправки.PrivatePerson.AddressByDocument.Text);
								
								ОбластьМакета1.Параметры.Индекс = СтруктураАдрес.Индекс;
								ОбластьМакета1.Параметры.Город =  Город;//СтруктураАдрес.Город;
								ОбластьМакета1.Параметры.Улица =  СтруктураАдрес.Улица;
								ОбластьМакета1.Параметры.ДомКорпус =  СтруктураАдрес.Дом + СтруктураАдрес.Корпус;
								ОбластьМакета1.Параметры.Квартира =  СтруктураАдрес.Квартира;
								ОбластьМакета1.Параметры.АдресДоп = СтрЗаменить(СтрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.FactAddress.Text,",,",","),",,",",");
								ОбластьМакета1.Параметры.Email =  ?(ТипЗнч(СтруктураМТТ.РезультатОтправки.ClientContact.Email)=Тип("Null"),"",СтруктураМТТ.РезультатОтправки.ClientContact.Email);
								ОбластьМакета1.Параметры.Телефон = ?(ТипЗнч(СтруктураМТТ.РезультатОтправки.ClientContact.Phone)=Тип("Null"),"",СтруктураМТТ.РезультатОтправки.ClientContact.Phone);
								ОбластьМакета1.Параметры.АбонентскийНомер = СтруктураМТТ.РезультатОтправки.ContractData.PhoneNumber + " / " + СтруктураМТТ.РезультатОтправки.ContractData.ExtraMSISDN;
								ОбластьМакета1.Параметры.НомерСИМ = СтруктураМТТ.РезультатОтправки.ContractData.ICCID + " / " + СтруктураМТТ.РезультатОтправки.ContractData.ExtraICCID;
								ОбластьМакета1.Параметры.Абонент =  СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Surname + " " + СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Name + " " + СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Patername;
								ОбластьМакета1.Параметры.Ответственный = СтруктураМТТ.РезультатОтправки.SellerData.FIO;
													
								//ОбластьМакета1.Параметры.КодШтрихКода 		= СтруктураДанныхПечатиМТТ.КодШтрихКода;
								
								ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР АБОНЕНТА";
								ОбластьМакета1.Параметры.ТипБланка = "НУСХАИ МУШТАРЙ";
								ТабДокумент.Вывести(ОбластьМакета);
								ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								ТабДокумент.Вывести(ОбластьМакета1);
								ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР ОПЕРАТОРА";
								ОбластьМакета1.Параметры.ТипБланка = "НУСХАИ ОПЕРАТОР";						
								ТабДокумент.Вывести(ОбластьМакета);
								ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								ТабДокумент.Вывести(ОбластьМакета1);
								ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
								ТабДокумент.ИмяПринтера = "_&_";
								Возврат ТабДокумент;
								
								
								
							Иначе
								Макет = ПолучитьМакет("МакетМТТ");
								
								ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
								ОбластьМакета.Параметры.ДоговорНомер = "";//СтруктураМТТ.РезультатОтправки.ContractData.Number;
								ДоговорДата = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.ContractData.ContractDate,"/",""),"(",""),")",""),"Date","")),10);
								ОбластьМакета.Параметры.ДатаДень  = Лев(ДоговорДата,2);
								ОбластьМакета.Параметры.ДатаМесяц  = сред(ДоговорДата,4,2);
								ОбластьМакета.Параметры.ДатаГод  = сред(ДоговорДата,10,1);
								ОбластьМакета.Параметры.АбонентФамилия = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Surname;
								ОбластьМакета.Параметры.АбонентИмя = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Name;
								ОбластьМакета.Параметры.АбонентОтчество = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Patername;
								ДатаРожд_ =  РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthDate,"/",""),"(",""),")",""),"Date",""));
								ОбластьМакета.Параметры.ДеньДатаРождения = Лев(ДатаРожд_,2);
								ОбластьМакета.Параметры.МесяцДатаРождения = сред(ДатаРожд_,4,2);
								ОбластьМакета.Параметры.ГодДатаРождения = сред(ДатаРожд_,7,4);
								ОбластьМакета.Параметры.ДокументСерияНомер = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Series + " " +СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Number;
								ОбластьМакета.Параметры.ДокументВид = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.DocumentType.Text;
								ОбластьМакета.Параметры.ДокументКемВыдан = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuingAuthority.Text;
								ОбластьМакета.Параметры.ДокументДатаВыдачи = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuedDate,"/",""),"(",""),")",""),"Date","")),10);
								ОбластьМакета.Параметры.МестоРождения =  СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthPlace;
								
								АдресМесто = РазложитьАдрес(ПараметрыСеанса.ТекущийМагазин.ФактическийАдрес, Истина);
								
								ОбластьМакета.Параметры.МестоЗаключения =АдресМесто.Регион+" "+АдресМесто.Город + " " + АдресМесто.НаселенныйПункт+" "+АдресМесто.Дом;
								ОбластьМакета.Параметры.ПредставлениеАдреса = СтрЗаменить(СтрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.AddressByDocument.Text,",,",","),",,",","); //МТТ+Телетай РФА_19.02.2016 17:56:06_Суслова} убрала сдвоенные запятые
								ОбластьМакета.Параметры.ДатаПрописью =  ДатаПрописью(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.ContractData.ContractDate,"/",""),"(",""),")",""),"Date","")));
								
								
								
								ОбластьМакета.Параметры.ТарифныйПлан = СтруктураМТТ.РезультатОтправки.ContractData.RateTitle;
								
								СтруктураАдрес =  РазложитьАдрес(СтруктураМТТ.РезультатОтправки.PrivatePerson.AddressByDocument.Text);
								
								ОбластьМакета.Параметры.Индекс = СтруктураАдрес.Индекс;
								
								//{6824_24.02.2016 11:34:51_Суслова
								Если СтруктураАдрес.Регион="Москва г" Тогда
									Город=СтруктураАдрес.Регион+" ";
								Иначе	
									Город="";
								КонецЕсли;	

								Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.Город) и ВРЕГ(СтруктураАдрес.Город)<>"НЕТ",(СтруктураАдрес.Город),"")+" ";
								Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.НаселенныйПункт) и ВРЕГ(СтруктураАдрес.НаселенныйПункт)<>"НЕТ",(СтруктураАдрес.НаселенныйПункт),"")+" ";
								Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.ДопТерритория) и ВРЕГ(СтруктураАдрес.ДопТерритория)<>"НЕТ",(СтруктураАдрес.ДопТерритория),"");
                                //6824_24.02.2016 11:34:51_Суслова}
								
								ОбластьМакета.Параметры.НаселенныйПункт =  Город;//СтруктураАдрес.НаселенныйПункт;
								ОбластьМакета.Параметры.Улица =  СтруктураАдрес.Улица;
								ОбластьМакета.Параметры.Дом =  СтруктураАдрес.Дом;
								ОбластьМакета.Параметры.Квартира =  СтруктураАдрес.Квартира;
								ОбластьМакета.Параметры.Страна =  "Россия";
								ОбластьМакета.Параметры.Корпус =  СтруктураАдрес.Корпус;
								ОбластьМакета.Параметры.КонтактныеДанные = СтрЗаменить(СтрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.FactAddress.Text,",,",","),",,",",");
								ОбластьМакета.Параметры.Email =  СтруктураМТТ.РезультатОтправки.ClientContact.Email;
								ОбластьМакета.Параметры.Телефон = СтруктураМТТ.РезультатОтправки.ClientContact.Phone;
								ОбластьМакета.Параметры.АбонентскийНомер = СтруктураМТТ.РезультатОтправки.ContractData.PhoneNumber;
								ОбластьМакета.Параметры.НомерСИМ = СтруктураМТТ.РезультатОтправки.ContractData.ICCID;
								ОбластьМакета.Параметры.СпособМэйл = "";
								ОбластьМакета.Параметры.СпособПочта = "";
								ОбластьМакета.Параметры.СпособОфис = "";
								//ОбластьМакета.Параметры.БезДоставки = "";
								//ОбластьМакета.Параметры.Абонент =  СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Surname + " " + СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Name + " " + СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Patername;
								ОбластьМакета.Параметры.Ответственный = СтруктураМТТ.РезультатОтправки.SellerData.FIO;
								ОбластьМакета.Параметры.НеПредоставлениеДоступа =  "";
								ОбластьМакета.Параметры.НеПередачаТретьимЛицам =   "";
								ОбластьМакета.Параметры.НеПолучениеРекламы =       "";
								ОбластьМакета.Параметры.НеПолучениеСМС =           "";
								ОбластьМакета.Параметры.ПредоставлениеДоступа =  "";
								ОбластьМакета.Параметры.ПередачаТретьимЛицам =   "";
								ОбластьМакета.Параметры.ПолучениеРекламы =       "";
								ОбластьМакета.Параметры.ПолучениеСМС =           "";
								
								ОбластьМакета.Параметры.КодШтрихКода 		= СтруктураДанныхПечатиМТТ.КодШтрихКода;
								
								ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР АБОНЕНТА";
								ТабДокумент.Вывести(ОбластьМакета);
								ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР ОПЕРАТОРА";
								ТабДокумент.Вывести(ОбластьМакета);
								ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
								ТабДокумент.ИмяПринтера = "_&_";
								Возврат ТабДокумент;
								
								
								
								
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			Исключение
				возврат ТабДокумент;
			КонецПопытки;
			
			
			
			//ттт_Ульянников
			
		ИначеЕсли СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.Телетай Тогда
			Попытка
				СтруктураМТТ = КонтрактОбъект.ДополнительныеРеквизиты.Получить();
				
				Если ТипЗнч(СтруктураМТТ) = Тип("Структура") Тогда
					Если СтруктураМТТ.Свойство("РезультатОтправки") Тогда
						
						Если  СтруктураМТТ.РезультатОтправки.Свойство("ContractData") Тогда
							Макет  = ПолучитьМакет("МакетТелетай");						
							ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
							ДоговорДата = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.ContractData.ContractDate,"/",""),"(",""),")",""),"Date","")),10);
							ОбластьМакета.Параметры.ДатаДень  = Лев(ДоговорДата,2);
							ОбластьМакета.Параметры.ДатаМесяц  = сред(ДоговорДата,4,2);
							ОбластьМакета.Параметры.ДатаГод  = сред(ДоговорДата,7,4);
							ОбластьМакета.Параметры.АбонентФамилия = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Surname;
							ОбластьМакета.Параметры.АбонентИмя = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Name;
							ОбластьМакета.Параметры.АбонентОтчество = СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.Patername;
							ОбластьМакета.Параметры.АбонентДатаРождения =  Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthDate,"/",""),"(",""),")",""),"Date","")),10);
							ОбластьМакета.Параметры.ДокументСерия = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Series;
							ОбластьМакета.Параметры.ДокументНомер = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.Number;
							СтруктураАдресОП =  РазложитьАдрес(ПараметрыСеанса.ТекущийМагазин.ФактическийАдрес, Истина);
							ОбластьМакета.Параметры.АдресГород =  СтруктураАдресОП.Регион+" "+СтруктураАдресОП.Город+" "+СтруктураАдресОП.Дом;
							ОбластьМакета.Параметры.ДокументКемВыдан = СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuingAuthority.Text;
							ОбластьМакета.Параметры.ДокументДатаВыдачи = Лев(РазобратьДатуUnix(стрЗаменить(стрЗаменить(стрЗаменить(стрЗаменить(СтруктураМТТ.РезультатОтправки.PrivatePerson.DocumentData.IssuedDate,"/",""),"(",""),")",""),"Date","")),10);
							ОбластьМакета.Параметры.МестоРождения =  СтруктураМТТ.РезультатОтправки.PrivatePerson.PrivateData.BirthPlace;
							ОбластьМакета.Параметры.ТарифныйПлан = СтруктураМТТ.РезультатОтправки.ContractData.RateTitle;
							
							СтруктураАдрес =  РазложитьАдрес(СтруктураМТТ.РезультатОтправки.PrivatePerson.AddressByDocument.Text);
							
							ОбластьМакета.Параметры.Индекс = СтруктураАдрес.Индекс;
							ОбластьМакета.Параметры.Регион =  СтруктураАдрес.Регион;
							ОбластьМакета.Параметры.Район =  СтруктураАдрес.Район;
							Если СтруктураАдрес.Город = "нет" ИЛИ СтруктураАдрес.Город = "" Тогда
								ОбластьМакета.Параметры.Город =  СтруктураАдрес.НаселенныйПункт;
							Иначе	
								ОбластьМакета.Параметры.Город =  СтруктураАдрес.Город;
							КонецЕсли;
														
							//{6824_20.02.2016 12:57:48_Суслова
							//город+населенный пункт+доп. территория
							Город="";
															
							Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.Город) и ВРЕГ(СтруктураАдрес.Город)<>"НЕТ",(СтруктураАдрес.Город),"")+" ";
							Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.НаселенныйПункт) и ВРЕГ(СтруктураАдрес.НаселенныйПункт)<>"НЕТ",(СтруктураАдрес.НаселенныйПункт),"")+" ";
							Город=Город+?(ЗначениеЗаполнено(СтруктураАдрес.ДопТерритория) и ВРЕГ(СтруктураАдрес.ДопТерритория)<>"НЕТ",(СтруктураАдрес.ДопТерритория),"");
							ОбластьМакета.Параметры.Город =Город;
							//6824_20.02.2016 12:57:48_Суслова}
							
							ОбластьМакета.Параметры.КодШтрихКода 		= СтруктураДанныхПечатиМТТ.КодШтрихКода;
							
							ОбластьМакета.Параметры.Улица =  СтруктураАдрес.Улица;
							ОбластьМакета.Параметры.Дом =  СтруктураАдрес.Дом;
							ОбластьМакета.Параметры.Квартира =  СтруктураАдрес.Квартира;
							ОбластьМакета.Параметры.Корпус =  СтруктураАдрес.Корпус;
							ОбластьМакета.Параметры.АбонентскийНомер = СтруктураМТТ.РезультатОтправки.ContractData.PhoneNumber;
							ОбластьМакета.Параметры.НомерСИМ = СтруктураМТТ.РезультатОтправки.ContractData.ICCID;
							ОбластьМакета.Параметры.КодТТ = ПараметрыСеанса.КодТочки;
							ОбластьМакета.Параметры.Ответственный =  СтруктураМТТ.РезультатОтправки.SellerData.FIO;
							СтруктураОтветственный = РазборФИО(СтруктураМТТ.РезультатОтправки.SellerData.FIO);
							ОбластьМакета.Параметры.ОтветственныйФамилия = СтруктураОтветственный.Фамилия;
							ОбластьМакета.Параметры.ОтветственныйИмя = СтруктураОтветственный.Имя;
							ОбластьМакета.Параметры.ОтветственныйОтчество = СтруктураОтветственный.Отчество;
							ОбластьМакета.Параметры.КодовоеСлово = СтруктураМТТ.РезультатОтправки.ContractData.CodeWord;
							ТабДокумент.Вывести(ОбластьМакета);
							ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							ТабДокумент.Вывести(ОбластьМакета);
							ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
							ТабДокумент.ИмяПринтера = "_&_";
							Возврат ТабДокумент;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;	
				
			Исключение
				возврат ТабДокумент;
			КонецПопытки;
			
			//ттт_Ульянников
			
			
		КонецЕсли;
	КонецЕсли;	
	//мтт_Ульянников
	
	// { Феофанов Д.А._16.03.2016_[CQ#14084]
	Если СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.КонтрактМГТС Тогда
		ТабДокумент = ПечатьКонтрактаМГТС();
		Возврат ТабДокумент;
	КонецЕсли;
	// } Феофанов Д.А._16.03.2016_[CQ#14084]
	
    
	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Бланк");
	
	СтруктураДополнительныхРеквизитов = СсылкаНаОбъект.ДополнительныеРеквизиты.Получить();
	Если СтруктураДополнительныхРеквизитов = Неопределено Тогда
		СтруктураДополнительныхРеквизитов = Новый Структура();
	КонецЕсли;
	
	//6766_Ульянников
	Попытка
		Если СтруктураДополнительныхРеквизитов.Свойство("ТЗДополнительныеРеквизиты") Тогда
			
			СтруктураДопРеквизитовНов =  СтруктураДополнительныхРеквизитов.ТЗДополнительныеРеквизиты[0].СтруктураРеквизитовПриказ0344П;
			
			Если ТипЗнч(СтруктураДопРеквизитовНов.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") тогда
				
				
				ОбластьМакета.Параметры.Гражданство = СтруктураДопРеквизитовНов.Гражданство;
				ОбластьМакета.Параметры.КодПодразделения = "";
				ОбластьМакета.Параметры.ДеньДатаНач = Лев(СтруктураДопРеквизитовНов.ДатаНачПребывания,2);
				ОбластьМакета.Параметры.МесяцДатаНач = сред(СтруктураДопРеквизитовНов.ДатаНачПребывания,4,2);
				ОбластьМакета.Параметры.ГодДатаНач = сред(СтруктураДопРеквизитовНов.ДатаНачПребывания,7,4);
				ОбластьМакета.Параметры.ДеньДатаКон = Лев(СтруктураДопРеквизитовНов.ДатаКонПребывания,2);
				ОбластьМакета.Параметры.МесяцДатаКон = сред(СтруктураДопРеквизитовНов.ДатаКонПребывания,4,2);
				ОбластьМакета.Параметры.ГодДатаКон = сред(СтруктураДопРеквизитовНов.ДатаКонПребывания,7,4);
				ОбластьМакета.Параметры.ИННАбонента = СтруктураДопРеквизитовНов.ИННАбонента;
				Если СтруктураДополнительныхРеквизитов.Свойство("КПП") Тогда
					ОбластьМакета.Параметры.КПП = ?(СтруктураДополнительныхРеквизитов.КПП <> Неопределено,СтруктураДополнительныхРеквизитов.КПП,"");
				КонецЕсли;
				
				
				
			ИначеЕсли  ТипЗнч(СтруктураДопРеквизитовНов.Контрагент) = Тип("СправочникСсылка.Контрагенты") тогда	
				ОбластьМакета.Параметры.СерияСведетельства = СтруктураДопРеквизитовНов.СерияСвидетельства;
				ОбластьМакета.Параметры.НомерСвидетельства = СтруктураДопРеквизитовНов.НомерСвидетельства;
				ОбластьМакета.Параметры.ОГРН = СтруктураДопРеквизитовНов.ОГРН;
				//13797_Ульянников_
				Если НЕ НовыйФорматРФА Тогда
					ОбластьМакета.Параметры.ДатаРегистрацииЮр = Лев(СтруктураДопРеквизитовНов.ДатаРегистрации,10);
				Иначе
					ОбластьМакета.Параметры.ДеньДатаРегистрации = Лев(СтруктураДопРеквизитовНов.ДатаРегистрации,2);	
					ОбластьМакета.Параметры.МесяцДатаРегистрации = сред(СтруктураДопРеквизитовНов.ДатаРегистрации,4,2);
					ОбластьМакета.Параметры.ГодДатаРегистрации =   сред(СтруктураДопРеквизитовНов.ДатаРегистрации,7,4);
				КонецЕсли;
				//13797_Ульянников
				ОбластьМакета.Параметры.РегистрирующийОрган = СтруктураДопРеквизитовНов.РегистрирующийОрган;
				Если СтруктураДополнительныхРеквизитов.Свойство("КПП") Тогда
					ОбластьМакета.Параметры.КПП = ?(СтруктураДополнительныхРеквизитов.КПП <> Неопределено,СтруктураДополнительныхРеквизитов.КПП,"");
				КонецЕсли;
				Попытка
					СтруктураФакт = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент, ТекущаяДата());
					ОбластьМакета.Параметры.АдресФакт = СтруктураФакт.ФактическийАдрес;
				Исключение
				КонецПопытки;
				
				
			КонецЕсли;	
			
		КонецЕсли;	
	Исключение
	КонецПопытки;
	//6766_Ульянников

	
	//13791
	
	//Сразу получаем структуру дополнительных реквизитов и передадим их в параметры
	
	
	
	
	
	
	
	
	//13791
	
	
	//13649_Ульянников_26.10.2015
	ЗначПФ_ = "";
	Если РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("ТРУ",ЗначПФ_) тогда
		Бренд =  РАРУС_ДобавленныеПроцедуры.ПолучитьСвойствоОбъекта( ПараметрыСеанса.ТекущийМагазин.ОсновнойСклад, "Бренд ОП (вывеска)");
		
		МассивПстр =  РазложитьСтрокуВМассивПодстрок(ЗначПФ_, ",", Истина);
		для каждого эл из МассивПстр цикл
			
			Брэнд_ = РАРУС_ДобавленныеПроцедуры.ПолучитьСвойствоОбъекта(СсылкаНаОбъект.Тариф, СокрЛП(эл));
			Если ТипЗнч(Брэнд_) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов")  тогда
				Если НЕ Брэнд_.Пустая() тогда
					прервать;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		Если ТипЗнч(Бренд) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") И (Брэнд_ <> Неопределено И ТипЗнч(Брэнд_) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) тогда
			
			Если (НЕ Бренд.Наименование = "Телефон.ру") ИЛИ ( Врег(Брэнд_.Наименование) <> Врег("Телефон.ру")) тогда
				
				ОбластьМакета.Рисунки.Удалить(ОбластьМакета.Рисунки.Рисунок1);
				
			КонецЕсли; 
			
			
		ИначеЕсли ТипЗнч(Бренд) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") И (Брэнд_ <> Неопределено И ТипЗнч(Брэнд_) = Тип("Строка")) тогда
			
			Если (НЕ Бренд.Наименование = "Телефон.ру") ИЛИ ( Врег(Брэнд_) <> Врег("Телефон.ру")) тогда
				
				ОбластьМакета.Рисунки.Удалить(ОбластьМакета.Рисунки.Рисунок1);
				
			КонецЕсли; 
			
			
		Иначе	
			ОбластьМакета.Рисунки.Удалить(ОбластьМакета.Рисунки.Рисунок1);
		КонецЕсли;
	Иначе
		ОбластьМакета.Рисунки.Удалить(ОбластьМакета.Рисунки.Рисунок1);
	КонецЕсли;                                                                                  
	//13649_Ульянников_26.10.2015 

	ОбластьМакета.Параметры.Заполнить(СтруктураДополнительныхРеквизитов);
	// Boke 02.10.2010 + {
	СтруктураДанныхПечати = СсылкаНаОбъект.ПолучитьОбъект().ПолучитьДанныеПечати(); 
	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПечати);
	// Boke 02.10.2010 + }
	//13797_Ульянников_	
	Если НовыйФорматРФА И НЕ (СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.ПерецМобайл) Тогда
		Если СтруктураДанныхПечати.Свойство("ДатаРождения") Тогда	
			ОбластьМакета.Параметры.ДеньДатаРождения = Лев(СтруктураДанныхПечати.ДатаРождения,2);	
			ОбластьМакета.Параметры.МесяцДатаРождения = сред(СтруктураДанныхПечати.ДатаРождения,4,2);
			ОбластьМакета.Параметры.ГодДатаРождения =   сред(СтруктураДанныхПечати.ДатаРождения,7,4);
		КонецЕсли;
		Если СтруктураДанныхПечати.Свойство("ДокументДатаВыдачи") Тогда	
			ОбластьМакета.Параметры.ДеньДатаВыдачи = Лев(СтруктураДанныхПечати.ДокументДатаВыдачи,2);	
			ОбластьМакета.Параметры.МесяцДатаВыдачи = сред(СтруктураДанныхПечати.ДокументДатаВыдачи,4,2);
			ОбластьМакета.Параметры.ГодДатаВыдачи =   сред(СтруктураДанныхПечати.ДокументДатаВыдачи,7,4);
		КонецЕсли;
		ОбластьМакета.Параметры.ДеньДата = Лев(СсылкаНаОбъект.Дата,2);	
		ОбластьМакета.Параметры.МесяцДата = сред(СсылкаНаОбъект.Дата,4,2);
		ОбластьМакета.Параметры.ГодДата =   сред(СсылкаНаОбъект.Дата,7,4);	
	КонецЕсли;
	//13797_Ульянников

	//{13099_22.05.2015 15:47:11_Суслова
	ИДК="";
	Если СтруктураДополнительныхРеквизитов.Свойство("ИДКонтракта") Тогда
		ИДК=СтруктураДополнительныхРеквизитов.ИДКонтракта;
	КонецЕсли;	

	//[нач RTKDEVICRET-23 Ульянников 15.03.2016
	Если (РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("ВебКонтракты") 
		ИЛИ (РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("ВебКонтракты_ТРУ") 
		И СсылкаНаОбъект.ВидОперации <> Перечисления.ВидыОперацийДокументаКонтракт.КонтрактМТС ) )
		// RTKDEVICRET-23 Ульянников 15.03.2016 кон]  
		//И СсылкаНаОбъект.ЮрФизЛицо<>Перечисления.ЮрФизЛицо.ЮрЛицо 
		И   Не 	РАРУС_ДобавленныеПроцедуры.ПолучитьСвойствоОбъекта( СсылкаНаОбъект.СимКарта,ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Категория товара"))=
		Справочники.ЗначенияСвойствОбъектов.НайтиПоКоду("GO0057220")
		
		И ЗначениеЗаполнено(ИДК) Тогда
		
		СтруктураДопРеквизитов=СсылкаНаОбъект.ДополнительныеРеквизиты.Получить();
		Если СтруктураДопРеквизитов.Свойство("ИДКонтракта") Тогда
			ИДКонтракта=СтруктураДопРеквизитов.ИДКонтракта;	
		КонецЕсли;	
		
		КодОП=ПараметрыСеанса.ТекущийМагазин.Код;
		КодОператора=Сред(СсылкаНаОбъект.ICC,2,3);
		
		URL = "http://checkpointservice.tsretail.ru/CheckPointWebService.asmx/ProcessXml";
				
		Запрос = "<?xml version=""1.0"" encoding=""utf-8""?>
			|<request>
			|<process_name>ACTIVATION</process_name>
			|<function>GET_DATA_FOR_RFA</function>
			|<function_params>
			|<subsite_code>"+КодОП+"</subsite_code>
			|<operator_code>"+КодОператора+"</operator_code>
			|<request_id>"+ИДКонтракта+"</request_id>
			|</function_params>
			|</request>";
			
		CyberPlat = ПОлучитьСерверТО().ПолучитьВнешнююОбработку(Справочники.ВнешниеОбработки.CyberPlat);
		Если CyberPlat = Неопределено  Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось получить обработку <CyberPlat>!
			|Отправка контрольного пакета невозможна!
			|");
			Ошибка = Истина;
		КонецЕсли;

		пAnswerXML="";
		СтруктураОтвета = Новый Структура();

		КодОшибки = CyberPlat.глОтправитьПоHTTP(Запрос, пAnswerXML, ,,,,,URL,,1);
		Если КодОшибки <> 0 Тогда
			Ошибка = Истина;
		КонецЕсли;
		ДеревоXML = "";
		ДеревоРезультата = РТК_ДобавленныеПроцедуры.РазобратьОтвет(пAnswerXML);
		   
		Если КодОшибки<>0 Тогда
			
			СтрокаДерева = ДеревоРезультата.Строки.Найти("Fault", "Имя", Истина).Строки;
			Для Каждого ТС Из СтрокаДерева Цикл
				СтруктураОтвета.Вставить(ТС.Имя,ТС.Значение);
			КонецЦикла;		
			Предупреждение("Не удалось обработать ответ от сервиса."); 	
			Ошибка = Истина;
			
		Иначе
			
			СтрокаДерева = ДеревоРезультата.Строки.Найти("response","Имя", истина).Строки;
			
			Для Каждого ТС Из СтрокаДерева Цикл
				СтруктураОтвета.Вставить(ТС.Имя,ТС.Значение);
			КонецЦикла;
			
			Если СтруктураОтвета.Свойство("is_error") И НРег(СтруктураОтвета.is_error)<>"0" Тогда
				Ошибка = Истина;
				Предупреждение("Не удалось разобрать ответ от сервиса, 
				|ошибка: "+?(СтруктураОтвета.Свойство("message"), СтруктураОтвета.message, ""));
			КонецЕсли;
			
			СтрокаДерева = ДеревоРезультата.Строки.Найти("FactualAddress","Имя", истина).Строки;
			Для Каждого ТС Из СтрокаДерева Цикл
				СтруктураОтвета.Вставить(ТС.Имя,ТС.Значение);
			КонецЦикла;

			//13099
			ЭтоФизЛицо=Ложь;
			ЭтоЮрЛицо=Ложь;
			Если СсылкаНаОбъект.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ФизЛицо Тогда
				ЭтоФизЛицо=Истина;
			ИначеЕсли ТипЗнч(СсылкаНаОбъект.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда	
				Если СсылкаНаОбъект.Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
					ЭтоЮрЛицо=Истина;
				Иначе
					ЭтоФизЛицо=Истина;
				КонецЕсли;
			КонецЕсли;	
				        				
			Если ЭтоЮрЛицо Тогда
								
				СтрокаДерева = ДеревоРезультата.Строки.Найти("Organization","Имя", истина).Строки;
				Для Каждого ТС Из СтрокаДерева Цикл
					СтруктураОтвета.Вставить(ТС.Имя,ТС.Значение);
				КонецЦикла;
				
				//СтруктураДанныхПечати.ИННОрганизации = СтруктураОтвета.Inn;
				СтруктураДанныхПечати.НазваниеОрганизации =СтруктураОтвета.Name;
				
				//СтруктураДанныхПечати.Имя =СтруктураОтвета.FirstName;
				//СтруктураДанныхПечати.Отчество=СтруктураОтвета.MiddleName;		
				//СтруктураДанныхПечати.ДатаРождения = Дата(СтрЗаменить(СтруктураОтвета.DateOfBirth,"-",""));
				//СтруктураДанныхПечати.МестоРождения=СтруктураОтвета.PlaceOfBirth;
				//СтруктураДанныхПечати.ПолМужской=?(СтруктураОтвета.Sex="Man",Истина,Ложь);
				//СтруктураДанныхПечати.ДокументВид = Справочники.ДокументыУдостоверяющиеЛичность.НайтиПоРеквизиту("КодИМНС",СокрЛП(СтруктураОтвета.Id));			
				//СтруктураДанныхПечати.ДокументСерия = СтруктураОтвета.DocumentSeries;
				//СтруктураДанныхПечати.ДокументНомер = СтруктураОтвета.DocumentNumber;				
				//СтруктураДанныхПечати.ДокументКемВыдан = СтруктураОтвета.OrganizationOfIssue;				
				//СтруктураДанныхПечати.ДокументДатаВыдачи =СтруктураОтвета.DateOfIssue;

			Иначе	
			//13099	
			
			    СтрокаДерева = ДеревоРезультата.Строки.Найти("Person","Имя", истина).Строки;
				Для Каждого ТС Из СтрокаДерева Цикл
					СтруктураОтвета.Вставить(ТС.Имя,ТС.Значение);
				КонецЦикла;

				СтрокаДерева = ДеревоРезультата.Строки.Найти("IdentityDocument","Имя", истина).Строки;
				Для Каждого ТС Из СтрокаДерева Цикл
					СтруктураОтвета.Вставить(ТС.Имя,ТС.Значение);
				КонецЦикла;
				
				СтрокаДерева = ДеревоРезультата.Строки.Найти("DocumentType","Имя", истина).Строки;
				Для Каждого ТС Из СтрокаДерева Цикл
					СтруктураОтвета.Вставить(ТС.Имя,ТС.Значение);
				КонецЦикла;
				
				СтруктураДанныхПечати.ФИО = СтруктураОтвета.LastName+" "+СтруктураОтвета.FirstName+" "+СтруктураОтвета.MiddleName;
				СтруктураДанныхПечати.Фамилия =СтруктураОтвета.LastName;
				СтруктураДанныхПечати.Имя =СтруктураОтвета.FirstName;
				СтруктураДанныхПечати.Отчество=СтруктураОтвета.MiddleName;		
				СтруктураДанныхПечати.ДатаРождения = Дата(СтрЗаменить(СтруктураОтвета.DateOfBirth,"-",""));
				СтруктураДанныхПечати.МестоРождения=СтруктураОтвета.PlaceOfBirth;
				СтруктураДанныхПечати.ПолМужской=?(СтруктураОтвета.Sex="Man",Истина,Ложь);
				//6940_Ульянников_23.03.2016
				СтруктураДанныхПечати.ПолЖенский=?(СтруктураОтвета.Sex<>"Man",Истина,Ложь);
				//6940_Ульянников_23.03.2016
				СтруктураДанныхПечати.ДокументВид = Справочники.ДокументыУдостоверяющиеЛичность.НайтиПоРеквизиту("КодИМНС",СокрЛП(СтруктураОтвета.Id));			
				СтруктураДанныхПечати.ДокументСерия = СтруктураОтвета.DocumentSeries;
				СтруктураДанныхПечати.ДокументНомер = СтруктураОтвета.DocumentNumber;				
				СтруктураДанныхПечати.ДокументКемВыдан = СтруктураОтвета.OrganizationOfIssue;				
				СтруктураДанныхПечати.ДокументДатаВыдачи =СтруктураОтвета.DateOfIssue;

				//13797_Ульянников_
				
				Если НовыйФорматРФА И НЕ (СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.ПерецМобайл) Тогда
					ДатаРожд_  =  Дата(СтрЗаменить(СтруктураОтвета.DateOfBirth,"-",""));
					СтруктураДанныхПечати.Вставить("ДеньДатаРождения", Лев(ДатаРожд_,2));
					СтруктураДанныхПечати.Вставить("МесяцДатаРождения", сред(ДатаРожд_,4,2));
					СтруктураДанныхПечати.Вставить("ГодДатаРождения", сред(ДатаРожд_,7,4));
					
					ДатаВыд_ = СтруктураОтвета.DateOfIssue;
					СтруктураДанныхПечати.Вставить("ДеньДатаВыдачи", Лев(ДатаВыд_,2));
					СтруктураДанныхПечати.Вставить("МесяцДатаВыдачи", сред(ДатаВыд_,4,2));
					СтруктураДанныхПечати.Вставить("ГодДатаВыдачи", сред(ДатаВыд_,7,4));
					
					СтруктураДанныхПечати.Вставить("ДеньДата", Лев(СсылкаНаОбъект.Дата,2));
					СтруктураДанныхПечати.Вставить("МесяцДата", сред(СсылкаНаОбъект.Дата,4,2));
					СтруктураДанныхПечати.Вставить("ГодДата", сред(СсылкаНаОбъект.Дата,7,4));
				КонецЕсли;	
				
				//13797_Ульянников

			КонецЕсли; //13099
		
		КонецЕсли;	
		
		СтруктураДанныхПечати.Вставить("МагазинКодМТС",ПараметрыСеанса.ТекущийМагазин.Код);
		СтруктураДанныхПечати.Вставить("АдресРегистрацииПредставление",СтруктураОтвета.Zip+" "+СтруктураОтвета.Region+" "+СтруктураОтвета.District+" "+
																?(СтруктураОтвета.City="нет","",СтруктураОтвета.City)+" "+СтруктураОтвета.Street+" "+
																СтруктураОтвета.Home+" "+СтруктураОтвета.Apartment);
	    СтруктураДанныхПечати.Вставить("ОбластьГородРег",СтруктураОтвета.Region+" "+СтруктураОтвета.District+" "+
																?(СтруктураОтвета.City="нет","",СтруктураОтвета.City));
		СтруктураДанныхПечати.Вставить("УлицаДомКвРег",СтруктураОтвета.Street+" "+СтруктураОтвета.Home+" "+СтруктураОтвета.Apartment);												
																
	КонецЕсли;	
	//13099_22.05.2015 15:47:29_Суслова}
	
	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПечати);
	
	
	Если КонтрактОбъект.ЭтоПостпейдКонтракт = 0 Тогда

		  ОбластьМакета.Параметры.АбонентскаяПлата 			= СсылкаНаОбъект.АбонентскаяПлата;
		  ОбластьМакета.Параметры.Итого 					= СсылкаНаОбъект.АвансовыйПлатеж + СсылкаНаОбъект.АбонентскаяПлата;
		  
	КонецЕсли;
	
	//1 колонка
	//СтруктураДополнительныхРеквизитов.Свойство("ТелефонДоставки", ОбластьМакета.Параметры.ТелефонДоставки);
	СтруктураДополнительныхРеквизитов.Свойство("EmailДоставки", ОбластьМакета.Параметры.EmailДоставки);
	ОбластьМакета.Параметры.КодШтрихКода 		= СтруктураДанныхПечати.КодШтрихКода;
	ОбластьМакета.Параметры.Тариф 				= СсылкаНаОбъект.Тариф;
	ОбластьМакета.Параметры.ДопУслуга 				= СсылкаНаОбъект.ЗначениеДопУслуги;
	ОбластьМакета.Параметры.НомерТелефона 			= СсылкаНаОбъект.НомерТелефона;
	ОбластьМакета.Параметры.КодовоеСлово 		= СсылкаНаОбъект.КодовоеСлово;
	//{РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_ 
	//ОбластьМакета.Параметры.АвансовыйПлатеж 	= СсылкаНаОбъект.АвансовыйПлатеж;
	//ОбластьМакета.Параметры.ICC 						= СсылкаНаОбъект.ICC;
	Если КонтрактОбъект.ЭтоПостпейдКонтракт <> 2 Тогда
		//{РТК_CQ12628_18.11.2014 17:30:15_МальцевРВ_ 
		//ОбластьМакета.Параметры.ICC 						= СсылкаНаОбъект.ICC;
		стрICC = СокрЛП(СсылкаНаОбъект.ICC);
		Если СтрДлина(стрICC) = 18 Тогда
			стрICC = "8" + стрICC;
		КонецЕсли; 
		ОбластьМакета.Параметры.ICC	= стрICC;
		//РТК_CQ12628_18.11.2014 17:30:15_МальцевРВ_}
		ОбластьМакета.Параметры.АвансовыйПлатеж 	= СсылкаНаОбъект.АвансовыйПлатеж;
	Иначе
		ОбластьМакета.Параметры.ПереносимыйНомерТелефона = СсылкаНаОбъект.НазначениеДоставки;
		стрICC = СокрЛП(СсылкаНаОбъект.ICC);
		Если СтрДлина(стрICC) = 18 Тогда
			стрICC = "8" + стрICC;
		КонецЕсли; 
		ОбластьМакета.Параметры.ICC	= стрICC;
	КонецЕсли;
	//РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_}
	ОбластьМакета.Параметры.АдресОП = ПараметрыСеанса.ТекущийМагазин.ФактическийАдрес;
	ОбластьМакета.Параметры.СпособДоставки = СсылкаНаОбъект.СпособДоставки;
	ОбластьМакета.Параметры.Ответственный 		= СсылкаНаОбъект.Ответственный;
	//13797_Ульянников_
	Если НЕ НовыйФорматРФА Тогда
		ОбластьМакета.Параметры.Дата 				= Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	//13797_Ульянников
	ОбластьМакета.Параметры.ТипБланка	 = "ЭКЗЕМПЛЯР ОПЕРАТОРА";
	
	//13303_Ульянников_29.06.2015
	Оператор_ = "";
	Если РТК_ДобавленныеПроцедуры_Сервер.ФункционалВключен("Оператор_Текст", Оператор_) тогда
		
		ОбластьМакета.Параметры.ОператорМТС = Оператор_;
	Иначе
		ОбластьМакета.Параметры.ОператорМТС = "Публичное акционерное общество ""Мобильные ТелеСистемы"" 109147 г.Москва, Марксистская ул., 4";
	КонецЕсли;	
	//13303_Ульянников_29.06.2015
	
	Если СсылкаНаОбъект.СпособДоставки = Перечисления.СпособыДоставки.НеДоставлять ИЛИ
		СсылкаНаОбъект.СпособДоставки = Перечисления.СпособыДоставки.SMS ИЛИ
		СсылкаНаОбъект.СпособДоставки = Перечисления.СпособыДоставки.Факс  Тогда
		
		тел_ = КонтрактОбъект.АдресДоставки;
	Иначе
		тел_ = "";
	КонецЕсли;	
	
	ОбластьМакета.Параметры.тел1  = Сред(тел_,5,1);
	ОбластьМакета.Параметры.тел2  = Сред(тел_,6,1);
	ОбластьМакета.Параметры.тел3  = Сред(тел_,7,1);
	ОбластьМакета.Параметры.тел4  = Сред(тел_,10,1);
	ОбластьМакета.Параметры.тел5  = Сред(тел_,11,1);
	ОбластьМакета.Параметры.тел6  = Сред(тел_,12,1);
	ОбластьМакета.Параметры.тел7  = Сред(тел_,14,1);
	ОбластьМакета.Параметры.тел8  = Сред(тел_,15,1);
	ОбластьМакета.Параметры.тел9  = Сред(тел_,17,1);
	ОбластьМакета.Параметры.тел10 = Сред(тел_,18,1);
	
	Если Не ЗначениеЗаполнено(ИДК) Тогда //Суслова 13099
	
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактнаяИнформация.Поле1,
		|	КонтактнаяИнформация.Поле2,
		|	КонтактнаяИнформация.Поле3,
		|	КонтактнаяИнформация.Поле4,
		|	КонтактнаяИнформация.Поле5,
		|	КонтактнаяИнформация.Поле6,
		|	КонтактнаяИнформация.Поле7,
		|	КонтактнаяИнформация.Поле8,
		|	КонтактнаяИнформация.Поле9,
		|	КонтактнаяИнформация.Поле10,
		|	КонтактнаяИнформация.Поле11
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)";
		Запрос.УстановитьПараметр("Объект", СсылкаНаОбъект.Контрагент);
		Рез = Запрос.Выполнить().Выбрать();
		Пока Рез.Следующий() Цикл
			ОбластьМакета.Параметры.ИндексРег = Рез.Поле1;
			ОбластьМакета.Параметры.РеспубликаРег = "";
			ОбластьМакета.Параметры.ОбластьГородРег = Рез.Поле2 +" "+ Рез.Поле3 +" "+ Рез.Поле4;
			ОбластьМакета.Параметры.УлицаДомКвРег = Рез.Поле6 +" "+ Рез.Поле7 +?(Рез.Поле9 <> "",", "," ")+ Рез.Поле9;
		КонецЦикла;
		ОбластьМакета.Параметры.АдресФакт = "";
		//13303
		
	КонецЕсли; //Суслова 13099	
	
	//{РТК_CQ#12977_10.04.2015 16:59:04_Прядиев_
	Если ВыводитьСвойстваКонтракта Тогда
	
		ПередачаТретьимЛицам = РАРУС_ДобавленныеПроцедуры.ПолучитьСвойствоОбъекта(СсылкаНаОбъект,"ПередачаТретьимЛицам");
		
		Если ЗначениеЗаполнено(ПередачаТретьимЛицам) Тогда 
			Если ПередачаТретьимЛицам Тогда
				ОбластьМакета.Параметры.ПередачаТретьимЛицам = "x";
			КонецЕсли;
		КонецЕсли;	
		ПредоставлениеДоступа = РАРУС_ДобавленныеПроцедуры.ПолучитьСвойствоОбъекта(СсылкаНаОбъект,"ПредоставлениеДоступа");
		Если ЗначениеЗаполнено(ПредоставлениеДоступа) Тогда 
			Если ПредоставлениеДоступа Тогда
				ОбластьМакета.Параметры.ПредоставлениеДоступа = "x";
			КонецЕсли;
		КонецЕсли;	
		ПолучениеРекламы = РАРУС_ДобавленныеПроцедуры.ПолучитьСвойствоОбъекта(СсылкаНаОбъект,"ПолучениеРекламы");
		Если ЗначениеЗаполнено(ПолучениеРекламы) Тогда 
			Если ПолучениеРекламы Тогда
				ОбластьМакета.Параметры.ПолучениеРекламы = "x";
			КонецЕсли;
		КонецЕсли;	
		НеПолучениеСМС = РАРУС_ДобавленныеПроцедуры.ПолучитьСвойствоОбъекта(СсылкаНаОбъект,"НеПолучениеСМС");
		Если ЗначениеЗаполнено(НеПолучениеСМС) Тогда 
			Если НеПолучениеСМС Тогда
				ОбластьМакета.Параметры.НеПолучениеСМС = "x";
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли; 
	//РТК_CQ#12977_10.04.2015 16:59:04_Прядиев}
    //13797_Ульянников_
	Если НовыйФорматРФА И НЕ (СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДокументаКонтракт.ПерецМобайл) Тогда
		ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР АБОНЕНТА";
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета.Параметры.ТипБланка = "ЭКЗЕМПЛЯР ОПЕРАТОРА";
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокумент.ИмяПринтера = "_&_";
		Возврат ТабДокумент;
	КонецЕсли;	
	//13797_Ульянников	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Boke 02.10.2010 + {
	//Вторая страница
	ОбластьМакета.Параметры.ТипБланка	 = "ЭКЗЕМПЛЯР АБОНЕНТА";
	ТабДокумент.Вывести(ОбластьМакета);
	// Boke 02.10.2010 + }
	 
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.АвтоМасштаб = Ложь;
	//{РТК_#5524_21.04.2015 11:38:10_Прядиев_
	//ТабДокумент.МасштабПечати = 94;  // РТК_8407_05.05.2012 10:50:01_Гордиенко_}
	ТабДокумент.МасштабПечати = 90;  
	//РТК_#5524_21.04.2015 11:38:10_Прядиев}
	 
	ТабДокумент.ИмяПринтера = "_&_";
	// РТК_7975_13.03.2012 12:45:49_Седых_} 
	
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСнизу = 0;
	
	НапечататьПравила(ПараметрыСеанса.ТекущийМагазин.ОсновнойСклад);
	//{РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_ 
	Если КонтрактОбъект.ЭтоПостпейдКонтракт = 2 Тогда
		//{РТК_CQ11818_21.04.2014 11:28:02_МальцевРВ_ 
		//НапечататьЗаявленияПортации(СтруктураДанныхПечати);
		ПечатьЗаявленияНаПортацию = Неопределено;
		ПечатьЗаявленияНаПортацию = ПолучитьСерверТО().ПолучитьВнешнююОбработку(Справочники.ВнешниеОбработки.НайтиПоНаименованию("Заявление на портацию"));
		Если (РТК_ДобавленныеПроцедуры_Сервер.РелизНеСтарее("1.1.1.21.100") и (ПечатьЗаявленияНаПортацию = Неопределено))
			ИЛИ (НЕ РТК_ДобавленныеПроцедуры_Сервер.РелизНеСтарее("1.1.1.21.100")) Тогда
			НапечататьЗаявленияПортации(СтруктураДанныхПечати);
		ИначеЕсли НЕ(ПечатьЗаявленияНаПортацию = Неопределено) и РТК_ДобавленныеПроцедуры_Сервер.РелизНеСтарее("1.1.1.21.100") Тогда
			СсылкаНаЧек = ПечатьЗаявленияНаПортацию.ПолучитьДокументПродажиКонтракта(СсылкаНаОбъект);
			Если НЕ (СсылкаНаЧек = Документы.ЧекККМ.ПустаяСсылка()) Тогда
				ЧекОбъект = СсылкаНаЧек.ПолучитьОбъект();
				СтруктураДополнительныхРеквизитов = СсылкаНаОбъект.ДополнительныеРеквизиты.Получить();
				Если НЕ (СтруктураДополнительныхРеквизитов = Неопределено) Тогда
					Если СтруктураДополнительныхРеквизитов.Свойство("ДатаПортации") Тогда
						ТабДокументЗаявление = Неопределено;
						ПечатьЗаявленияНаПортацию.СсылкаНаОбъект = СсылкаНаОбъект;
						ПечатьЗаявленияНаПортацию.ЗапроситьДату = Ложь;
						ПечатьЗаявленияНаПортацию.БезПечати = Ложь;
						ПечатьЗаявленияНаПортацию.ЧекОбъект = СсылкаНаЧек.ПолучитьОбъект();
						КонтрактОбъект = СсылкаНаОбъект.ПолучитьОбъект();
						СтруктураДанныхПечати = КонтрактОбъект.ПолучитьДанныеПечати(); 
						СтруктураДанныхПечати.Вставить("НазначениеДоставки",СсылкаНаОбъект.НазначениеДоставки);
						СтруктураДанныхПечати.Вставить("МТСДоверенноеЛицо",СсылкаНаОбъект.МТСДоверенноеЛицо);
						СтруктураДанныхПечати.Вставить("Ответственный",СсылкаНаОбъект.Ответственный);
						СтруктураДанныхПечати.Вставить("ICC",СокрЛП(СсылкаНаОбъект.ICC));
						ПечатьЗаявленияНаПортацию.НапечататьЗаявленияПортации(СтруктураДанныхПечати,СтруктураДополнительныхРеквизитов,ТабДокументЗаявление);
						Если (ТабДокументЗаявление <> Неопределено) и ТипЗнч(ТабДокументЗаявление) = Тип("ТабличныйДокумент") Тогда
							КоличествоЭкземпляров = 2;
							НаПринтер = Ложь;
							УниверсальныеМеханизмы.НапечататьДокумент(ТабДокументЗаявление,
							КоличествоЭкземпляров,
							НаПринтер,,,,,,Ложь,,);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//РТК_CQ11818_21.04.2014 11:28:02_МальцевРВ_}
	КонецЕсли;
	//РТК_CQ11451_19.11.2013 10:22:54_МальцевРВ_}
	
	Возврат ТабДокумент;
	
КонецФункции
#КонецЕсли

//[нач 14233 Ульянников 14.04.2016
СтруктураМ = Новый Структура;
// 14233 Ульянников 14.04.2016 кон]